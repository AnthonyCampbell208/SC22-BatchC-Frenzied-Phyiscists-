{"backend_state":"init","connection_file":"/projects/d5a3aa23-997d-4ffc-977a-1dc20c583e62/.local/share/jupyter/runtime/kernel-5ba882d7-6bef-4d99-89e7-0f202d4f402f.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"398272","input":"","pos":25,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"5f36d0","input":"X = heart_df[\"horsepower\"].to_numpy()\ny = heart_df[\"HeartDisease\"].to_numpy()","pos":17,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"c7c2f8","input":"","pos":5,"type":"cell"}
{"cell_type":"code","exec_count":110,"id":"bfc0d7","input":"ATA = []\n\nNAP = []\nASY = []\nTA = []\nbar_df = heart_df.copy(deep=True)\n","pos":60,"type":"cell"}
{"cell_type":"code","exec_count":111,"id":"488a36","input":"bar_df = bar_df.groupby('ChestPainType', as_index=False).mean()\nbar_df.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ChestPainType</th>\n      <th>Age</th>\n      <th>Sex</th>\n      <th>RestingBP</th>\n      <th>Cholesterol</th>\n      <th>FastingBS</th>\n      <th>RestingECG</th>\n      <th>MaxHR</th>\n      <th>ExerciseAngina</th>\n      <th>Oldpeak</th>\n      <th>ST_Slope</th>\n      <th>HeartDisease</th>\n      <th>intAge</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>49.242775</td>\n      <td>0.653179</td>\n      <td>130.624277</td>\n      <td>233.046243</td>\n      <td>0.109827</td>\n      <td>0.421965</td>\n      <td>150.208092</td>\n      <td>0.098266</td>\n      <td>0.307514</td>\n      <td>0.219653</td>\n      <td>0.138728</td>\n      <td>49.242775</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>53.310345</td>\n      <td>0.738916</td>\n      <td>130.960591</td>\n      <td>197.438424</td>\n      <td>0.201970</td>\n      <td>0.625616</td>\n      <td>143.236453</td>\n      <td>0.251232</td>\n      <td>0.674877</td>\n      <td>0.532020</td>\n      <td>0.354680</td>\n      <td>53.310345</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>54.959677</td>\n      <td>0.858871</td>\n      <td>133.229839</td>\n      <td>186.645161</td>\n      <td>0.284274</td>\n      <td>0.633065</td>\n      <td>128.477823</td>\n      <td>0.598790</td>\n      <td>1.162702</td>\n      <td>0.826613</td>\n      <td>0.790323</td>\n      <td>54.959677</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>54.826087</td>\n      <td>0.782609</td>\n      <td>136.413043</td>\n      <td>207.065217</td>\n      <td>0.282609</td>\n      <td>0.869565</td>\n      <td>147.891304</td>\n      <td>0.130435</td>\n      <td>1.036957</td>\n      <td>0.652174</td>\n      <td>0.434783</td>\n      <td>54.826087</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   ChestPainType        Age       Sex   RestingBP  Cholesterol  FastingBS  \\\n0              0  49.242775  0.653179  130.624277   233.046243   0.109827   \n1              1  53.310345  0.738916  130.960591   197.438424   0.201970   \n2              2  54.959677  0.858871  133.229839   186.645161   0.284274   \n3              3  54.826087  0.782609  136.413043   207.065217   0.282609   \n\n   RestingECG       MaxHR  ExerciseAngina   Oldpeak  ST_Slope  HeartDisease  \\\n0    0.421965  150.208092        0.098266  0.307514  0.219653      0.138728   \n1    0.625616  143.236453        0.251232  0.674877  0.532020      0.354680   \n2    0.633065  128.477823        0.598790  1.162702  0.826613      0.790323   \n3    0.869565  147.891304        0.130435  1.036957  0.652174      0.434783   \n\n      intAge  \n0  49.242775  \n1  53.310345  \n2  54.959677  \n3  54.826087  "},"exec_count":111,"output_type":"execute_result"}},"pos":61,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":112,"id":"1974b2","input":"fig = px.bar(bar_df, x=\"ChestPainType\", y=\"Age\")\nfig.show()","output":{"0":{"data":{"iframe":"810769706976a88cd03ae8d4290ba95fa0005264"},"exec_count":112,"output_type":"execute_result"}},"pos":63,"type":"cell"}
{"cell_type":"code","exec_count":113,"id":"7f0073","input":"fig2 = make_subplots (rows = 1, cols = 2, subplot_titles = (\"Cholesterol Levels of People With and Without Heart Failure\", \"Resting Blood Pressure of People With and Without Heart Failure\"))\n#Heart Failure and Cholesterol\nfig2.add_trace(go.Histogram(x = hd_true['Cholesterol'], name = 'Has Heart Failure'),  row = 1, col = 1)\nfig2.add_trace(go.Histogram(x = hd_false['Cholesterol'], name = 'No Heart Failure'), row= 1, col = 1)\n\n#Heart Failure and Blood Pressure\nfig2.add_trace(go.Histogram(x = hd_true['RestingBP'], name = 'Has Heart Failure'), row = 1, col = 2)\nfig2.add_trace(go.Histogram(x = hd_false['RestingBP'], name = 'No Heart Failure'), row = 1, col = 2)\n\n\n#Update titles and increments of the count for Cholesterol\nfig2.update_xaxes(title_text = \"Cholesterol Level (mm/dL)\", range = [70, 625], row = 1, col = 1)\nfig2.update_yaxes(title_text = \"Count\", range = [0, 70], row = 1, col = 1)\n\n\n#Update titles and increments of the count for Blood Pressure\nfig2.update_xaxes(title_text = \"Resting Blood Pressure [mm Hg]\", range = [75, 205], row = 1, col = 2)\nfig2.update_yaxes(title_text = \"Count\", row = 1, col = 2)\n\nfig2.update_layout(height = 600, width = 1500, title_text = \"Histograms Comparing Different Values of People With and Without Heart Failure\")\nfig2.show()","output":{"0":{"data":{"iframe":"13cae212120ee0c5606828740268f3247bf5ddee"},"exec_count":113,"output_type":"execute_result"}},"pos":43,"type":"cell"}
{"cell_type":"code","exec_count":118,"id":"e4ed6b","input":"sunburst_df = heart_df.copy(deep=True)\nsunburst_df['ChestPainType'].replace(0, 'ATA' ,inplace=True)\nsunburst_df['ChestPainType'].replace(1,'NAP' ,inplace=True)\nsunburst_df['ChestPainType'].replace(2,'ASY' ,inplace=True)\nsunburst_df['ChestPainType'].replace(3,'TA' ,inplace=True)\nsunburst_df['HeartDisease'].replace(1,'Has Heart Disease' ,inplace=True)\nsunburst_df['HeartDisease'].replace(0,'No Heart Disease' ,inplace=True)\nfig = px.sunburst(sunburst_df, path=['HeartDisease', 'ChestPainType', 'Age'])\nfig.update_layout(\n    title='Sunburst',\n    width=1000,\n    height=1000,\n)\nfig.show()","output":{"0":{"name":"stderr","output_type":"stream","text":"/projects/d5a3aa23-997d-4ffc-977a-1dc20c583e62/miniconda3/envs/ds_env/lib/python3.8/site-packages/plotly/express/_core.py:1637: FutureWarning:\n\nThe frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n\n/projects/d5a3aa23-997d-4ffc-977a-1dc20c583e62/miniconda3/envs/ds_env/lib/python3.8/site-packages/plotly/express/_core.py:1637: FutureWarning:\n\nThe frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n\n/projects/d5a3aa23-997d-4ffc-977a-1dc20c583e62/miniconda3/envs/ds_env/lib/python3.8/site-packages/plotly/express/_core.py:1637: FutureWarning:\n\nThe frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n\n"},"1":{"data":{"iframe":"617c18514070ff2928c7444dd90fa85ef7629310"},"exec_count":118,"output_type":"execute_result"}},"pos":67,"type":"cell"}
{"cell_type":"code","exec_count":119,"id":"357481","input":"fig4 = make_subplots (rows = 1, cols = 2, subplot_titles = (\"Sex of People With and Without Heart Failure\", \"Old Peak of People With and Without Heart Failure\"))\n\nfig4.add_trace(go.Histogram(x = hd_true['Sex'], name = 'Has Heart Failure'), row = 1, col = 1)\nfig4.add_trace(go.Histogram(x = hd_false['Sex'], name = 'No Heart Failure'), row = 1, col = 1)\n\nfig4.add_trace(go.Histogram(x = hd_true['Oldpeak'], name = 'Has Heart Failure'), row = 1, col = 2)\nfig4.add_trace(go.Histogram(x = hd_false['Oldpeak'], name = 'No Heart Failure'), row = 1, col = 2)\n\nfig4.update_xaxes(title_text = \"Sex: [0 is female, 1 is male]\", row = 1, col = 1)\n\nfig4.update_layout(height = 500, width = 1500, title_text = \"Histograms Comparing Different Values of People With and Without Heart Failure\")\nfig4.show()","output":{"0":{"data":{"iframe":"5f204b008150add9bddfeb8ce7fa98fb6f0d0883"},"exec_count":119,"output_type":"execute_result"}},"pos":47,"type":"cell"}
{"cell_type":"code","exec_count":127,"id":"f5558f","input":"cholesterol_df = heart_df.loc[heart_df['Cholesterol'] > 0]\n# px.scatter(cholesterol_df, x = \"RestingBP\", y = \"MaxHR\", color = \"Age\")\n# px.scatter(cholesterol_df, x = \"Cholesterol\", y = \"MaxHR\", color = \"Age\")\ncholesterol_df[\"HeartDisease\"] = cholesterol_df[\"HeartDisease\"].astype(str)\nmatrix = px.scatter_matrix(cholesterol_df,\n    dimensions=[\"Age\", \"RestingBP\", \"Cholesterol\", \"MaxHR\", \"Oldpeak\"],\n    color=\"HeartDisease\",  color_discrete_sequence=[\"red\", \"blue\", \"green\", \"goldenrod\", \"magenta\"])\nmatrix.update_traces(diagonal_visible=False, showupperhalf=False)\nmatrix.update_layout(\n    title='Scatter Matrix',\n    width=1000,\n    height=1000,\n)\nmatrix.show()","output":{"0":{"name":"stderr","output_type":"stream","text":"/tmp/ipykernel_781/2339356345.py:4: SettingWithCopyWarning:\n\n\nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n\n"},"1":{"data":{"iframe":"09a4194b244acdce33a382b781b7ee38f75ec407"},"exec_count":127,"output_type":"execute_result"}},"pos":31,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":128,"id":"7d55ea","input":"# Please import libraries up here :)))) \n# It makes it much more readable\nimport pandas as pd\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport numpy as np\nfrom itertools import cycle\n\n","pos":0,"type":"cell"}
{"cell_type":"code","exec_count":132,"id":"f0f65f","input":"#px.violin(heart_df, x=\"HeartDisease\", y=\"MaxHR\", points=\"all\", color=\"Sex\").show()","pos":50,"type":"cell"}
{"cell_type":"code","exec_count":139,"id":"4afcc2","input":"fig3 = make_subplots (rows = 2, cols = 1, subplot_titles = (\"Maximum Heart Rate of People With Heart Failure\", \"Maximum Heart Rate of People Without Heart Failure\"))\n\n#Heart Failure and Max Heart rate\nfig3.add_trace(go.Histogram(x = hd_true['MaxHR'], name = 'Has Heart Failure'), row = 1, col = 1)\nfig3.add_trace(go.Histogram(x = hd_false['MaxHR'], name = 'No Heart Failure'), row = 2, col = 1)\n\n\n#update titles and increments of the count for max heart rates\nfig3.update_xaxes(title_text = \"Maximum Heart Rate\", range = [55, 207], row = 1, col = 1)\nfig3.update_yaxes(title_text = \"Count\", range = [0, 60], row = 1, col = 1)\nfig3.update_xaxes(title_text = \"Maximum Heart Rate\", range = [55, 207], row = 2, col = 1)\nfig3.update_yaxes(title_text = \"Count\", range = [0, 60], row = 2, col = 1)\n\nfig3.update_layout(height = 500, width = 1000, title_text = \"Histograms Comparing Different Values of People With and Without Heart Failure\")\nfig3.show()","output":{"0":{"data":{"iframe":"d359a68c6bab00a15643e73857cd0f634b1ab86f"},"exec_count":139,"output_type":"execute_result"}},"pos":45,"type":"cell"}
{"cell_type":"code","exec_count":14,"id":"e91e83","input":"heart_df = pd.read_csv(\"data/heart.csv\")\nheart_df.head()\n","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Sex</th>\n      <th>ChestPainType</th>\n      <th>RestingBP</th>\n      <th>Cholesterol</th>\n      <th>FastingBS</th>\n      <th>RestingECG</th>\n      <th>MaxHR</th>\n      <th>ExerciseAngina</th>\n      <th>Oldpeak</th>\n      <th>ST_Slope</th>\n      <th>HeartDisease</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>40</td>\n      <td>M</td>\n      <td>ATA</td>\n      <td>140</td>\n      <td>289</td>\n      <td>0</td>\n      <td>Normal</td>\n      <td>172</td>\n      <td>N</td>\n      <td>0.0</td>\n      <td>Up</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>49</td>\n      <td>F</td>\n      <td>NAP</td>\n      <td>160</td>\n      <td>180</td>\n      <td>0</td>\n      <td>Normal</td>\n      <td>156</td>\n      <td>N</td>\n      <td>1.0</td>\n      <td>Flat</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>37</td>\n      <td>M</td>\n      <td>ATA</td>\n      <td>130</td>\n      <td>283</td>\n      <td>0</td>\n      <td>ST</td>\n      <td>98</td>\n      <td>N</td>\n      <td>0.0</td>\n      <td>Up</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>48</td>\n      <td>F</td>\n      <td>ASY</td>\n      <td>138</td>\n      <td>214</td>\n      <td>0</td>\n      <td>Normal</td>\n      <td>108</td>\n      <td>Y</td>\n      <td>1.5</td>\n      <td>Flat</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>54</td>\n      <td>M</td>\n      <td>NAP</td>\n      <td>150</td>\n      <td>195</td>\n      <td>0</td>\n      <td>Normal</td>\n      <td>122</td>\n      <td>N</td>\n      <td>0.0</td>\n      <td>Up</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   Age Sex ChestPainType  RestingBP  Cholesterol  FastingBS RestingECG  MaxHR  \\\n0   40   M           ATA        140          289          0     Normal    172   \n1   49   F           NAP        160          180          0     Normal    156   \n2   37   M           ATA        130          283          0         ST     98   \n3   48   F           ASY        138          214          0     Normal    108   \n4   54   M           NAP        150          195          0     Normal    122   \n\n  ExerciseAngina  Oldpeak ST_Slope  HeartDisease  \n0              N      0.0       Up             0  \n1              N      1.0     Flat             1  \n2              N      0.0       Up             0  \n3              Y      1.5     Flat             1  \n4              N      0.0       Up             0  "},"exec_count":14,"output_type":"execute_result"}},"pos":1,"type":"cell"}
{"cell_type":"code","exec_count":141,"id":"c9c559","input":"px.bar([1,2,3], [3,4,5])","output":{"0":{"data":{"iframe":"31f0d5602858dbc7f77c8e438b5aa070215ad1d3"},"exec_count":141,"output_type":"execute_result"}},"pos":58,"type":"cell"}
{"cell_type":"code","exec_count":142,"id":"98a389","input":"#Exercise Angina & Exercise Angina With/Without Heart Disease\nfig = px.pie(heart_df, names='ExerciseAngina', title = \"Exercise Angina\")\nfig.show()\n\nfig = make_subplots(rows=1, cols=2, specs=[[{'type':'pie'}, {'type':'pie'}]])\nfig.add_trace(go.Pie(labels = no_exercise_angina['HeartDisease'], name = \"No Heart Disease\"), 1,1)\nfig.add_trace(go.Pie(labels = exercise_angina['HeartDisease'], name = \"Heart Disease\"), 1,2)\n\nfig.update_traces(hole=.4, hoverinfo=\"label+percent+name\")\nfig.update_layout(title_text = \"Exercise Angina and Heart Disease\", annotations=[dict(text='No Heart Disease', x=0.173, y=0.5, font_size=15, showarrow=False),\n                 dict(text='Heart Disease', x=0.82, y=0.5, font_size=15, showarrow=False)])\nfig.show()\n","output":{"0":{"data":{"iframe":"256147b67c379132b77a6334398656ccbb8ece38"},"exec_count":142,"output_type":"execute_result"},"1":{"data":{"iframe":"a7e6ff0556755237d3e18623b7f47b3010d0aba4"},"exec_count":142,"output_type":"execute_result"}},"pos":27,"type":"cell"}
{"cell_type":"code","exec_count":144,"id":"2c5086","input":"std_bar_df = heart_df.groupby('ChestPainType', as_index=False).std()\nstd_bar_df.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ChestPainType</th>\n      <th>Age</th>\n      <th>Sex</th>\n      <th>RestingBP</th>\n      <th>Cholesterol</th>\n      <th>FastingBS</th>\n      <th>RestingECG</th>\n      <th>MaxHR</th>\n      <th>ExerciseAngina</th>\n      <th>Oldpeak</th>\n      <th>ST_Slope</th>\n      <th>HeartDisease</th>\n      <th>intAge</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>9.259754</td>\n      <td>0.477340</td>\n      <td>16.861711</td>\n      <td>69.266406</td>\n      <td>0.313581</td>\n      <td>0.716080</td>\n      <td>22.281042</td>\n      <td>0.298538</td>\n      <td>0.611138</td>\n      <td>0.455287</td>\n      <td>0.346666</td>\n      <td>9.259754</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>9.608023</td>\n      <td>0.440311</td>\n      <td>19.412878</td>\n      <td>103.869348</td>\n      <td>0.402463</td>\n      <td>0.837094</td>\n      <td>25.608501</td>\n      <td>0.434794</td>\n      <td>0.940512</td>\n      <td>0.590946</td>\n      <td>0.479599</td>\n      <td>9.608023</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>8.763468</td>\n      <td>0.348506</td>\n      <td>18.580961</td>\n      <td>122.058634</td>\n      <td>0.451523</td>\n      <td>0.803047</td>\n      <td>23.483317</td>\n      <td>0.490638</td>\n      <td>1.135079</td>\n      <td>0.573997</td>\n      <td>0.407489</td>\n      <td>8.763468</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>11.449026</td>\n      <td>0.417029</td>\n      <td>19.059644</td>\n      <td>83.383292</td>\n      <td>0.455243</td>\n      <td>0.909425</td>\n      <td>23.126923</td>\n      <td>0.340503</td>\n      <td>1.120587</td>\n      <td>0.640048</td>\n      <td>0.501206</td>\n      <td>11.449026</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   ChestPainType        Age       Sex  RestingBP  Cholesterol  FastingBS  \\\n0              0   9.259754  0.477340  16.861711    69.266406   0.313581   \n1              1   9.608023  0.440311  19.412878   103.869348   0.402463   \n2              2   8.763468  0.348506  18.580961   122.058634   0.451523   \n3              3  11.449026  0.417029  19.059644    83.383292   0.455243   \n\n   RestingECG      MaxHR  ExerciseAngina   Oldpeak  ST_Slope  HeartDisease  \\\n0    0.716080  22.281042        0.298538  0.611138  0.455287      0.346666   \n1    0.837094  25.608501        0.434794  0.940512  0.590946      0.479599   \n2    0.803047  23.483317        0.490638  1.135079  0.573997      0.407489   \n3    0.909425  23.126923        0.340503  1.120587  0.640048      0.501206   \n\n      intAge  \n0   9.259754  \n1   9.608023  \n2   8.763468  \n3  11.449026  "},"exec_count":144,"output_type":"execute_result"}},"pos":62,"type":"cell"}
{"cell_type":"code","exec_count":146,"id":"97401d","input":"\n#Chest Pain Type Overall & Chest Pain With/Without Heart Disease\nlabels = [\"Typical Angina\", \"Atypical Angina\" , \"Non-Anginal Pain\", \"Asymptomatic\"]\nfig = px.pie(heart_df, names='ChestPainType', title = \"Overall Chest Pain Type Prevalence\")\nfig.show()\n\nfig.write_html(\"visualizations/pie_overall_chest_pain.html\")\n\n#Wait this is really close to what you're actually supposed to do so you keep making the pie charts :))) You got this emma\nfig = make_subplots(rows=1, cols=2, specs=[[{'type':'pie'}, {'type':'pie'}]])\nfig.add_trace(go.Pie(labels= with_heart_disease['ChestPainType'], name = \"With Heart Disease\"), 1,1)\nfig.add_trace(go.Pie(labels= no_heart_disease['ChestPainType'], name = \"No Heart Disease\"), 1,2)\n\nfig.update_traces(hole=.4, hoverinfo=\"label+percent+name\")\nfig.update_layout(title_text = \"Chest Pain Type and Heart Disease\", annotations=[dict(text='Heart Disease',  x=0.178, y=0.5, font_size=15, showarrow=False),\n                 dict(text='No Heart Disease',  x=0.83, y=0.5, font_size=15, showarrow=False)])\nfig.show()\n\nfig.write_html(\"visualizations/pie_comp_chest_pain.html\")\n","output":{"0":{"data":{"iframe":"aefde79f2bbff528025b4c8724aad30bd26c718c"},"exec_count":146,"output_type":"execute_result"},"1":{"data":{"iframe":"37e416940647121b7c310239932d1a942d7fd902"},"exec_count":146,"output_type":"execute_result"}},"pos":24,"type":"cell"}
{"cell_type":"code","exec_count":15,"id":"e1af8a","input":"#heart_df['female'] = heart_df['female'].map({'F': 1, 'M': 0})\nheart_df['Sex'].replace('F',0 ,inplace=True)\nheart_df['Sex'].replace('M', 1,inplace=True)\n#Female is 0\n#Male is 1\n\n#ATA is 0\n#NAP is 1\n#ASY is 2\n#TA is 3\nheart_df['ChestPainType'].replace('ATA',0 ,inplace=True)\nheart_df['ChestPainType'].replace('NAP',1 ,inplace=True)\nheart_df['ChestPainType'].replace('ASY',2 ,inplace=True)\nheart_df['ChestPainType'].replace('TA',3 ,inplace=True)\n\n#Normal is 0\n#St is 1\n#LVH is 2\nheart_df['RestingECG'].replace('Normal',0, inplace=True)\nheart_df['RestingECG'].replace('ST',1, inplace=True)\nheart_df['RestingECG'].replace('LVH',2, inplace=True)\n\n#No is 0\n#Yes is 1\nheart_df['ExerciseAngina'].replace('N',0 ,inplace=True)\nheart_df['ExerciseAngina'].replace('Y',1 ,inplace=True)\n\n#ST_Slope\n#Up is 0\n#Flat is 1\n#Down is 2\nheart_df['ST_Slope'].replace('Up', 0, inplace = True)\nheart_df['ST_Slope'].replace('Flat', 1, inplace = True)\nheart_df['ST_Slope'].replace('Down', 2, inplace = True)\n\n#My computer just crashed, sorry!\n#np. Anthony is explaining scatter plots right now.\n\nheart_df.head() #worky :)","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Sex</th>\n      <th>ChestPainType</th>\n      <th>RestingBP</th>\n      <th>Cholesterol</th>\n      <th>FastingBS</th>\n      <th>RestingECG</th>\n      <th>MaxHR</th>\n      <th>ExerciseAngina</th>\n      <th>Oldpeak</th>\n      <th>ST_Slope</th>\n      <th>HeartDisease</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>40</td>\n      <td>1</td>\n      <td>0</td>\n      <td>140</td>\n      <td>289</td>\n      <td>0</td>\n      <td>0</td>\n      <td>172</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>49</td>\n      <td>0</td>\n      <td>1</td>\n      <td>160</td>\n      <td>180</td>\n      <td>0</td>\n      <td>0</td>\n      <td>156</td>\n      <td>0</td>\n      <td>1.0</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>37</td>\n      <td>1</td>\n      <td>0</td>\n      <td>130</td>\n      <td>283</td>\n      <td>0</td>\n      <td>1</td>\n      <td>98</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>48</td>\n      <td>0</td>\n      <td>2</td>\n      <td>138</td>\n      <td>214</td>\n      <td>0</td>\n      <td>0</td>\n      <td>108</td>\n      <td>1</td>\n      <td>1.5</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>54</td>\n      <td>1</td>\n      <td>1</td>\n      <td>150</td>\n      <td>195</td>\n      <td>0</td>\n      <td>0</td>\n      <td>122</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   Age  Sex  ChestPainType  RestingBP  Cholesterol  FastingBS  RestingECG  \\\n0   40    1              0        140          289          0           0   \n1   49    0              1        160          180          0           0   \n2   37    1              0        130          283          0           1   \n3   48    0              2        138          214          0           0   \n4   54    1              1        150          195          0           0   \n\n   MaxHR  ExerciseAngina  Oldpeak  ST_Slope  HeartDisease  \n0    172               0      0.0         0             0  \n1    156               0      1.0         1             1  \n2     98               0      0.0         0             0  \n3    108               1      1.5         1             1  \n4    122               0      0.0         0             0  "},"exec_count":15,"output_type":"execute_result"}},"pos":7,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":150,"id":"24e716","input":"heart_df.ChestPainType.value_counts()\n","output":{"0":{"data":{"text/plain":"2    496\n1    203\n0    173\n3     46\nName: ChestPainType, dtype: int64"},"exec_count":150,"output_type":"execute_result"}},"pos":18,"type":"cell"}
{"cell_type":"code","exec_count":16,"id":"309880","input":"with_heart_disease = heart_df[heart_df['HeartDisease']==1]\nwith_heart_disease\nwith_heart_disease['ChestPainType']","output":{"0":{"data":{"text/plain":"1      1\n3      2\n8      2\n11     0\n13     2\n      ..\n912    2\n913    3\n914    2\n915    2\n916    0\nName: ChestPainType, Length: 508, dtype: int64"},"exec_count":16,"output_type":"execute_result"}},"pos":20,"type":"cell"}
{"cell_type":"code","exec_count":173,"id":"a686a9","input":"#Age\na = go.Figure()\n\na.add_trace(go.Box(\n    x=heart_df['Age'],\n    y=heart_df['HeartDisease'],\n    name='Age',\n    marker_color='#FF4136'\n))\na.update_layout(\n    xaxis=dict(title='Age', zeroline=False),\n    yaxis = dict(title='HeartDisease', zeroline=False),\n    boxmode='group'\n)\n\na.update_traces(orientation='h') # horizontal box plots\na.show()\n","output":{"0":{"data":{"iframe":"4679ad0da8c840f78eac565d796c57c785c88ff8"},"exec_count":173,"output_type":"execute_result"}},"pos":15,"type":"cell"}
{"cell_type":"code","exec_count":18,"id":"784dc0","input":"no_heart_disease= heart_df[heart_df['HeartDisease'] == 0]\nno_heart_disease\nno_heart_disease['ChestPainType']","output":{"0":{"data":{"text/plain":"0      0\n2      0\n4      1\n5      1\n6      0\n      ..\n903    0\n904    0\n906    0\n910    0\n917    1\nName: ChestPainType, Length: 410, dtype: int64"},"exec_count":18,"output_type":"execute_result"}},"pos":21,"type":"cell"}
{"cell_type":"code","exec_count":19,"id":"a902a1","input":"exercise_angina = heart_df[heart_df['ExerciseAngina'] == 1]\nexercise_angina['HeartDisease']","output":{"0":{"data":{"text/plain":"3      1\n8      1\n11     1\n13     1\n23     1\n      ..\n907    1\n908    1\n909    1\n912    1\n915    1\nName: HeartDisease, Length: 371, dtype: int64"},"exec_count":19,"output_type":"execute_result"}},"pos":23,"type":"cell"}
{"cell_type":"code","exec_count":200,"id":"0180e2","input":"#Test\n#hd_true = heart_df[heart_df['HeartDisease'] ==\n#hd_false = heart_df[heart_df['HeartDisease'] == 0]\n#hd_false.head()","pos":40,"type":"cell"}
{"cell_type":"code","exec_count":208,"id":"593cc1","input":"px.histogram(heart_df['Age'], x = 'Age', title = 'Histogram of Age')\n#px.histogram(heart_df, x = 'Age')","output":{"0":{"data":{"iframe":"67fdaf314c8f53924bad7f606e7ab08167d502aa"},"exec_count":208,"output_type":"execute_result"}},"pos":37,"type":"cell"}
{"cell_type":"code","exec_count":209,"id":"a17d25","input":"#Test\n#heart_df.HeartDisease","pos":39,"type":"cell"}
{"cell_type":"code","exec_count":210,"id":"377035","input":"#Test\n#heart_df.columns","pos":33,"type":"cell"}
{"cell_type":"code","exec_count":218,"id":"880d3b","input":"heart_df.HeartDisease.value_counts()","output":{"0":{"data":{"text/plain":"1    508\n0    410\nName: HeartDisease, dtype: int64"},"exec_count":218,"output_type":"execute_result"}},"pos":19,"type":"cell"}
{"cell_type":"code","exec_count":24,"id":"0acf0b","input":"no_exercise_angina = heart_df[heart_df['ExerciseAngina'] == 0]\nno_exercise_angina['HeartDisease']","output":{"0":{"data":{"text/plain":"0      0\n1      1\n2      0\n4      0\n5      0\n      ..\n911    1\n913    1\n914    1\n916    1\n917    0\nName: HeartDisease, Length: 547, dtype: int64"},"exec_count":24,"output_type":"execute_result"}},"pos":22,"type":"cell"}
{"cell_type":"code","exec_count":317,"id":"a562fd","input":"visual = heart_df.corr()\nvisual = round(visual,3)\nfig = px.imshow(visual, text_auto = True, title=\"Correlation Matrix\")\nfig.update_layout(\n    title=\"Heart Disease Correlation Matrix\",\n    coloraxis_colorbar=dict(\n        title=\"Correlation Spectrum\",),\n    width = 835, height = 835,\n    autosize = False,\n    font_size = 15)\nfig.show()\n\n#Anaylsis: \n","output":{"0":{"data":{"iframe":"4d302c35501af591398dbd394d2d8d06024984ce"},"exec_count":317,"output_type":"execute_result"}},"pos":29,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":323,"id":"9aa93a","input":"heart_df.head(20)","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Sex</th>\n      <th>ChestPainType</th>\n      <th>RestingBP</th>\n      <th>Cholesterol</th>\n      <th>FastingBS</th>\n      <th>RestingECG</th>\n      <th>MaxHR</th>\n      <th>ExerciseAngina</th>\n      <th>Oldpeak</th>\n      <th>ST_Slope</th>\n      <th>HeartDisease</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>40</td>\n      <td>1</td>\n      <td>0</td>\n      <td>140</td>\n      <td>289</td>\n      <td>0</td>\n      <td>0</td>\n      <td>172</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>49</td>\n      <td>0</td>\n      <td>1</td>\n      <td>160</td>\n      <td>180</td>\n      <td>0</td>\n      <td>0</td>\n      <td>156</td>\n      <td>0</td>\n      <td>1.0</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>37</td>\n      <td>1</td>\n      <td>0</td>\n      <td>130</td>\n      <td>283</td>\n      <td>0</td>\n      <td>1</td>\n      <td>98</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>48</td>\n      <td>0</td>\n      <td>2</td>\n      <td>138</td>\n      <td>214</td>\n      <td>0</td>\n      <td>0</td>\n      <td>108</td>\n      <td>1</td>\n      <td>1.5</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>54</td>\n      <td>1</td>\n      <td>1</td>\n      <td>150</td>\n      <td>195</td>\n      <td>0</td>\n      <td>0</td>\n      <td>122</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>39</td>\n      <td>1</td>\n      <td>1</td>\n      <td>120</td>\n      <td>339</td>\n      <td>0</td>\n      <td>0</td>\n      <td>170</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>45</td>\n      <td>0</td>\n      <td>0</td>\n      <td>130</td>\n      <td>237</td>\n      <td>0</td>\n      <td>0</td>\n      <td>170</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>54</td>\n      <td>1</td>\n      <td>0</td>\n      <td>110</td>\n      <td>208</td>\n      <td>0</td>\n      <td>0</td>\n      <td>142</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>37</td>\n      <td>1</td>\n      <td>2</td>\n      <td>140</td>\n      <td>207</td>\n      <td>0</td>\n      <td>0</td>\n      <td>130</td>\n      <td>1</td>\n      <td>1.5</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>48</td>\n      <td>0</td>\n      <td>0</td>\n      <td>120</td>\n      <td>284</td>\n      <td>0</td>\n      <td>0</td>\n      <td>120</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>37</td>\n      <td>0</td>\n      <td>1</td>\n      <td>130</td>\n      <td>211</td>\n      <td>0</td>\n      <td>0</td>\n      <td>142</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>58</td>\n      <td>1</td>\n      <td>0</td>\n      <td>136</td>\n      <td>164</td>\n      <td>0</td>\n      <td>1</td>\n      <td>99</td>\n      <td>1</td>\n      <td>2.0</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>39</td>\n      <td>1</td>\n      <td>0</td>\n      <td>120</td>\n      <td>204</td>\n      <td>0</td>\n      <td>0</td>\n      <td>145</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>49</td>\n      <td>1</td>\n      <td>2</td>\n      <td>140</td>\n      <td>234</td>\n      <td>0</td>\n      <td>0</td>\n      <td>140</td>\n      <td>1</td>\n      <td>1.0</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>42</td>\n      <td>0</td>\n      <td>1</td>\n      <td>115</td>\n      <td>211</td>\n      <td>0</td>\n      <td>1</td>\n      <td>137</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>54</td>\n      <td>0</td>\n      <td>0</td>\n      <td>120</td>\n      <td>273</td>\n      <td>0</td>\n      <td>0</td>\n      <td>150</td>\n      <td>0</td>\n      <td>1.5</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>38</td>\n      <td>1</td>\n      <td>2</td>\n      <td>110</td>\n      <td>196</td>\n      <td>0</td>\n      <td>0</td>\n      <td>166</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>43</td>\n      <td>0</td>\n      <td>0</td>\n      <td>120</td>\n      <td>201</td>\n      <td>0</td>\n      <td>0</td>\n      <td>165</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>60</td>\n      <td>1</td>\n      <td>2</td>\n      <td>100</td>\n      <td>248</td>\n      <td>0</td>\n      <td>0</td>\n      <td>125</td>\n      <td>0</td>\n      <td>1.0</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>36</td>\n      <td>1</td>\n      <td>0</td>\n      <td>120</td>\n      <td>267</td>\n      <td>0</td>\n      <td>0</td>\n      <td>160</td>\n      <td>0</td>\n      <td>3.0</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"    Age  Sex  ChestPainType  RestingBP  Cholesterol  FastingBS  RestingECG  \\\n0    40    1              0        140          289          0           0   \n1    49    0              1        160          180          0           0   \n2    37    1              0        130          283          0           1   \n3    48    0              2        138          214          0           0   \n4    54    1              1        150          195          0           0   \n5    39    1              1        120          339          0           0   \n6    45    0              0        130          237          0           0   \n7    54    1              0        110          208          0           0   \n8    37    1              2        140          207          0           0   \n9    48    0              0        120          284          0           0   \n10   37    0              1        130          211          0           0   \n11   58    1              0        136          164          0           1   \n12   39    1              0        120          204          0           0   \n13   49    1              2        140          234          0           0   \n14   42    0              1        115          211          0           1   \n15   54    0              0        120          273          0           0   \n16   38    1              2        110          196          0           0   \n17   43    0              0        120          201          0           0   \n18   60    1              2        100          248          0           0   \n19   36    1              0        120          267          0           0   \n\n    MaxHR  ExerciseAngina  Oldpeak  ST_Slope  HeartDisease  \n0     172               0      0.0         0             0  \n1     156               0      1.0         1             1  \n2      98               0      0.0         0             0  \n3     108               1      1.5         1             1  \n4     122               0      0.0         0             0  \n5     170               0      0.0         0             0  \n6     170               0      0.0         0             0  \n7     142               0      0.0         0             0  \n8     130               1      1.5         1             1  \n9     120               0      0.0         0             0  \n10    142               0      0.0         0             0  \n11     99               1      2.0         1             1  \n12    145               0      0.0         0             0  \n13    140               1      1.0         1             1  \n14    137               0      0.0         0             0  \n15    150               0      1.5         1             0  \n16    166               0      0.0         1             1  \n17    165               0      0.0         0             0  \n18    125               0      1.0         1             1  \n19    160               0      3.0         1             1  "},"exec_count":323,"output_type":"execute_result"}},"pos":10,"type":"cell"}
{"cell_type":"code","exec_count":36,"id":"1dcf60","input":"hd_true = heart_df[heart_df['HeartDisease'] == 1]\nhd_false = heart_df[heart_df['HeartDisease'] == 0]","pos":34,"type":"cell"}
{"cell_type":"code","exec_count":39,"id":"e915a6","input":"px.histogram(heart_df, x='Sex', title = \"Histogram of Sex\")","output":{"0":{"data":{"iframe":"f3a49b7e7bbeab3a2fcdfb1b1f5ff5f4aa7bd8fa"},"exec_count":39,"output_type":"execute_result"}},"pos":35,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"2b99e5","input":"heart_df.columns","output":{"0":{"data":{"text/plain":"Index(['Age', 'Sex', 'ChestPainType', 'RestingBP', 'Cholesterol', 'FastingBS',\n       'RestingECG', 'MaxHR', 'ExerciseAngina', 'Oldpeak', 'ST_Slope',\n       'HeartDisease'],\n      dtype='object')"},"exec_count":4,"output_type":"execute_result"}},"pos":2,"type":"cell"}
{"cell_type":"code","exec_count":55,"id":"f8976e","input":"heart_df.ExerciseAngina.value_counts()\n","output":{"0":{"data":{"text/plain":"0    547\n1    371\nName: ExerciseAngina, dtype: int64"},"exec_count":55,"output_type":"execute_result"}},"pos":9,"type":"cell"}
{"cell_type":"code","exec_count":56,"id":"214909","input":"#MaxHR\n\nf = go.Figure()\n\nf.add_trace(go.Box(\n    x=heart_df['MaxHR'],\n    y=heart_df['HeartDisease'],\n    name='MaxHR',\n    marker_color='#FF851B'\n))\nf.update_layout(\n    xaxis=dict(title='MaxHR', zeroline=False),\n        yaxis = dict(title='HeartDisease', zeroline=False),\n    boxmode='group'\n)\n\nf.update_traces(orientation='h') # horizontal box plots\nf.show()\n","output":{"0":{"data":{"iframe":"ab613477129b2ce76c4fca7995a205f808810ae3"},"exec_count":56,"output_type":"execute_result"}},"pos":13,"type":"cell"}
{"cell_type":"code","exec_count":58,"id":"6546aa","input":"print(heart_df.shape)\nheart_df.dropna(inplace=True)\nprint(heart_df.shape)\n\n","output":{"0":{"name":"stdout","output_type":"stream","text":"(918, 13)\n(918, 13)\n"}},"pos":3,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":58,"id":"cf1483","input":"#Categorial: Sex, Chest Pain Type, FastingBS, Heart Disease, Resting ECG, ST_Slope, ExcerciseAngina\n\n#Continuous: [\"Age\", \"RestingBP\", \"Cholesterol\", \"MaxHR\", \"Oldpeak\"]\n","output":{"0":{"data":{"text/plain":"Index(['Age', 'Sex', 'ChestPainType', 'RestingBP', 'Cholesterol', 'FastingBS',\n       'RestingECG', 'MaxHR', 'ExerciseAngina', 'Oldpeak', 'ST_Slope',\n       'HeartDisease'],\n      dtype='object')"},"exec_count":58,"output_type":"execute_result"}},"pos":8,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"313032","input":"heart_df.info()\nprint(heart_df.RestingECG.unique()) #RestingECG has 3 unique values\nprint(heart_df.ChestPainType.unique())\nprint(heart_df.ST_Slope.unique())\nprint(heart_df.ExerciseAngina.unique())\n\n\n\n\n","output":{"0":{"name":"stdout","output_type":"stream","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 918 entries, 0 to 917\nData columns (total 12 columns):\n #   Column          Non-Null Count  Dtype  \n---  ------          --------------  -----  \n 0   Age             918 non-null    int64  \n 1   Sex             918 non-null    object \n 2   ChestPainType   918 non-null    object \n 3   RestingBP       918 non-null    int64  \n 4   Cholesterol     918 non-null    int64  \n 5   FastingBS       918 non-null    int64  \n 6   RestingECG      918 non-null    object \n 7   MaxHR           918 non-null    int64  \n 8   ExerciseAngina  918 non-null    object \n 9   Oldpeak         918 non-null    float64\n 10  ST_Slope        918 non-null    object \n 11  HeartDisease    918 non-null    int64  \ndtypes: float64(1), int64(6), object(5)\nmemory usage: 86.2+ KB\n['Normal' 'ST' 'LVH']\n['ATA' 'NAP' 'ASY' 'TA']\n['Up' 'Flat' 'Down']\n['N' 'Y']\n"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":62,"id":"99fa17","input":"# Makes the Layout for the Histogram\nfig = make_subplots(rows = 1, cols = 2, subplot_titles = (\"Ages of People With Heart Failure\", \"Ages of People Without Heart Failure\"))\n\n#Heart Failure and Age\nfig.add_trace(go.Histogram(x = hd_true['Age'], name = 'Has Heart Failure'),  row = 1, col = 1)\nfig.add_trace(go.Histogram(x = hd_false['Age'], name = 'No Heart Failure'), row= 1, col = 2)\n\n#Updates titles and increments of the count for Age\nfig.update_xaxes(title_text = \"Age\", range = [27, 78], row = 1, col = 1)\nfig.update_yaxes(title_text = \"Count\", range = [0, 53], row = 1, col = 1)\nfig.update_xaxes(title_text = \"Age\", range = [27, 78], row = 1, col = 2)\nfig.update_yaxes(title_text = \"Count\", range = [0, 53], row = 1, col = 2)\n\nfig.update_layout(height = 800, width = 1500, title_text = \"Histograms Comparing Different Values of People With and Without Heart Failure\")\nfig.show()","output":{"0":{"data":{"iframe":"74ba6549f5b5b6efe6d00536129767ab7ba3d358"},"exec_count":62,"output_type":"execute_result"}},"pos":41,"type":"cell"}
{"cell_type":"code","exec_count":73,"id":"6cd521","input":"np.mean(heart_df.Age)","output":{"0":{"data":{"text/plain":"53.510893246187365"},"exec_count":73,"output_type":"execute_result"}},"pos":65,"type":"cell"}
{"cell_type":"code","exec_count":75,"id":"ba394f","input":"np.std(heart_df.Age)","output":{"0":{"data":{"text/plain":"9.427477516153491"},"exec_count":75,"output_type":"execute_result"}},"pos":66,"type":"cell"}
{"cell_type":"code","exec_count":81,"id":"d75b97","input":"#RestingBP\ne = go.Figure()\n\ne.add_trace(go.Box(\n    x=heart_df['RestingBP'],\n    y=heart_df['HeartDisease'],\n    name='RestingBP',\n    marker_color='#FF4136'\n))\ne.update_layout(\n    xaxis=dict(title='RestingBP', zeroline=False),\n    yaxis = dict(title='HeartDisease', zeroline=False),\n    boxmode='group'\n)\n\ne.update_traces(orientation='h') # horizontal box plots\ne.show()","output":{"0":{"data":{"iframe":"8418ae719e1be9d4fdfe3cd62e715b0806fa325c"},"exec_count":81,"output_type":"execute_result"}},"pos":14,"type":"cell"}
{"cell_type":"code","exec_count":84,"id":"4832f1","input":"bar_df = heart_df.copy(deep=True)\nbar_df['intAge'] = bart_df['Age'].astype(int)\nw =bar_df.query('ChestPainType == 0')['intAge']\nx =bar_df.query('ChestPainType == 1')['intAge']\ny =bar_df.query('ChestPainType == 2')['intAge']\nz =bar_df.query('ChestPainType == 3')['intAge']\nATA.append(w)\nNAP.append(x)\nASY.append(y)\nTA.append(z)\n#print(ATA)\n#for i in ATA:\n    #i = list(i)\nprint(w)\nprint(type(w))\nprint(sum(w))\ng = sum(w) // len(w)\nh = sum(x) // len(x)\ni = sum(y) // len(y)\nj = sum(z) // len(z)\nprint(g)\nprint(h)\nprint(i)\nprint(j)\naverage_age = []\naverage_age.append(g)\naverage_age.append(h)\naverage_age.append(i)\naverage_age.append(j)\n# average age of 49 for chest pain ATA.\n# average age of 53 for chest pain NAP\n#average age of 54 for chest pain ASY\n#average age of 54 for chest pain TA\n\"\"\"h = 0\nfor i in ATA:\n    h += i\nprint(h)\"\"\"\n#h = sum(ATA)\n#print(h)\n\n\"\"\"heart_df['ChestPainType'].replace('ATA',0 ,inplace=True)\nheart_df['ChestPainType'].replace('NAP',1 ,inplace=True)\nheart_df['ChestPainType'].replace('ASY',2 ,inplace=True)\nheart_df['ChestPainType'].replace('TA',3 ,inplace=True)\"\"\"\n\"\"\"x = heart_df['ChestPainType']\ny = heart_df['Age']\nfig = px.bar(\"Chest Pain Type\", x, \"Age\", y)\nfig.show()\"\"\"\nfig = px.bar(x = heart_df['Age'], y = heart_df['ChestPainType'])\nfig.show()\nfigs = px.bar(x = heart_df['ChestPainType'], y =  )","output":{"0":{"name":"stdout","output_type":"stream","text":"0      40\n2      37\n6      45\n7      54\n9      48\n       ..\n903    56\n904    56\n906    55\n910    41\n916    57\nName: intAge, Length: 173, dtype: int64\n<class 'pandas.core.series.Series'>\n8519\n49\n53\n54\n54\n"},"1":{"data":{"iframe":"0af733579cc6fa73996e03f69d09da793f6a5f94"},"exec_count":84,"output_type":"execute_result"}},"pos":64,"type":"cell"}
{"cell_type":"code","exec_count":85,"id":"eabacd","input":"heart_df2 = heart_df[heart_df['Cholesterol'] > 0]\nheart_df2['Sex'].replace(0,'Female',inplace=True)\nheart_df2['Sex'].replace(1,'Male',inplace=True)\nprint(heart_df2.shape)\n\nimport plotly.graph_objects as go\n\n#plot male half, female half\n#x is heart disease\n#y is heart rate\n\n\ndef create2Fig(x_data1, y_data1, legend_title1, x_data2, y_data2,\n               legend_title2, x_title, y_title):\n    fig = go.Figure()\n    fig.add_trace(\n        go.Violin(x=x_data1,\n                  y=y_data1,\n                  legendgroup=legend_title1,\n                  scalegroup=legend_title1,\n                  name=legend_title1,\n#                   side='negative',\n                  line_color='blue',\n                  ))\n    fig.add_trace(\n        go.Violin(x=x_data2,\n                  y=y_data2,\n                  legendgroup=legend_title2,\n                  scalegroup=legend_title2,\n                  name=legend_title2,\n#                   side='positive',\n                  line_color='orange',\n                  ))\n    fig.update_traces(meanline_visible=True, box_visible = True)\n    fig.update_layout(violinmode='group')\n    fig.update_xaxes(title_text=x_title)\n    fig.update_yaxes(title_text=y_title)\n    return fig","output":{"0":{"name":"stdout","output_type":"stream","text":"(746, 13)\n"},"1":{"name":"stderr","output_type":"stream","text":"/tmp/ipykernel_781/157527307.py:2: SettingWithCopyWarning:\n\n\nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n\n/tmp/ipykernel_781/157527307.py:3: SettingWithCopyWarning:\n\n\nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n\n"}},"pos":51,"type":"cell"}
{"cell_type":"code","exec_count":86,"id":"d5e4e2","input":"altfig = create2Fig(heart_df2['Sex'][heart_df2['HeartDisease'] == 0],\n                 heart_df2['MaxHR'][heart_df2['HeartDisease'] == 0], 'No HD',\n                 heart_df2['Sex'][heart_df2['HeartDisease'] == 1],\n                 heart_df2['MaxHR'][heart_df2['HeartDisease'] == 1], 'Has HD',\n                 'Sex', 'Max Heart Rate')\naltfig.show()\n","output":{"0":{"data":{"iframe":"425ae947c92442220481ea1a0c24d3ccc4fbc030"},"exec_count":86,"output_type":"execute_result"}},"pos":52,"type":"cell"}
{"cell_type":"code","exec_count":87,"id":"1864fe","input":"\nfig2 = create2Fig(heart_df2['Sex'][heart_df2['HeartDisease'] == 0],\n                  heart_df2['Cholesterol'][heart_df2['HeartDisease'] == 0], 'No HD',\n                  heart_df2['Sex'][heart_df2['HeartDisease'] == 1],\n                  heart_df2['Cholesterol'][heart_df2['HeartDisease'] == 1], 'Has HD',\n                  'Sex', 'Cholesterol')\nfig2.show()","output":{"0":{"data":{"iframe":"1dd2b0a7f7603c360f83434d1b08737334583991"},"exec_count":87,"output_type":"execute_result"}},"pos":54,"type":"cell"}
{"cell_type":"code","exec_count":88,"id":"bbb5d2","input":"fig3 = create2Fig(heart_df2['Sex'][heart_df2['HeartDisease'] == 0],\n                  heart_df2['Age'][heart_df2['HeartDisease'] == 0], 'No HD',\n                  heart_df2['Sex'][heart_df2['HeartDisease'] == 1],\n                  heart_df2['Age'][heart_df2['HeartDisease'] == 1], 'Has HD',\n                  'Sex', 'Age')\nfig3.show()","output":{"0":{"data":{"iframe":"d5dbe51109ae14ad75215f569e7340ea57787fea"},"exec_count":88,"output_type":"execute_result"}},"pos":56,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":95,"id":"61bc2e","input":"import plotly.graph_objects as go\n\n\n#Heart disease[yes = 1, no = 0]\n#Cholesterol levels =green\n#RestingBP = red\n#MaxHR =orange\n\n#Shows that people who have abnormally high or low cholesterol have heart disease\n\n#Cholesterol\nfig = go.Figure()\nfig.add_trace(go.Box(\n    x=heart_df['Cholesterol'],\n    y=heart_df['HeartDisease'],\n    name='Cholesterol',\n    marker_color='#3D9970'\n))\n\n\nfig.update_layout(\n    xaxis=dict(title='Cholesterol', zeroline=False),\n    yaxis = dict(title='HeartDisease', zeroline=False),\n    boxmode='group'\n)\n\nfig.update_traces(orientation='h') # horizontal box plots\nfig.show()\n\n\n\n\n\n# angina = go.Figure()\n\n# angina.add_trace(go.Box(\n#     x=heart_df['ExerciseAngina'],\n#     y=heart_df['HeartDisease'],\n#     name='ExerciseAngina',\n#     marker_color='#FF851B'\n# ))\n\n\n# angina.update_layout(\n#     xaxis=dict(title='ExerciseAngina', zeroline=False),\n#     yaxis = dict(title='HeartDisease', zeroline=False),\n#     boxmode='group'\n# )\n\n# angina.update_traces(orientation='h') # horizontal box plots\n# angina.show()\n\n#a = px.box(df, y=\"total_bill\")\n#a.show()\n\n#fig = px.box(heart_df, x= 'HeartDisease',y='Age' )\n#fig.show()\n#e = px.box(heart_df, x= 'Age',y='Cholesterol', color = 'HeartDisease' )\n#e.show()\n","output":{"0":{"data":{"iframe":"27b2171821a29635d6c51754caf5af4e897b806c"},"exec_count":95,"output_type":"execute_result"}},"pos":11,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":96,"id":"6dad51","input":"heart_df.columns","output":{"0":{"data":{"text/plain":"Index(['Age', 'Sex', 'ChestPainType', 'RestingBP', 'Cholesterol', 'FastingBS',\n       'RestingECG', 'MaxHR', 'ExerciseAngina', 'Oldpeak', 'ST_Slope',\n       'HeartDisease', 'intAge'],\n      dtype='object')"},"exec_count":96,"output_type":"execute_result"}},"pos":59,"type":"cell"}
{"cell_type":"markdown","id":"0586c5","input":"- Specific things\n  - Specific values to reference\n- Broad things\n  - Compar visualizations\n    - What's similar?\n    - What's different \n  - Trends that you see \n\n","pos":12,"type":"cell"}
{"cell_type":"markdown","id":"163c64","input":"Atypical Angina \\(ATA\\) = 0\n\nNon\\-Anginal Pain \\(NAP\\) = 1\n\nAsymptomatic \\(ASY\\) = 2\n\nTypical Angina \\(TA\\) = 3 \n\nOverall, 54% of patients were asymptomatic and experienced no chest pain. The second most prevalent pain was non\\-anginal pain, followed by atypical angina. A small minority experienced typical angina. In patients with heart disease, an overwhelming majority were asymptomatic, with only 22.86% experiencing any pain. A minority of patients with heart disease had typical angina and atypical angina. However, in patients without heart disease, a third suffered non\\-anginal pain and another third suffered atypical angina. Asymptomatic chest pain made up a quarter of patients without heart disease, and a minority suffered typical angina. Among both groups, typical angina was the least common type of chest pain. However, a much larger percentage of patients with heart disease were asymptomatic compared to patients without heart disease. \n\n","pos":26,"type":"cell"}
{"cell_type":"markdown","id":"1cd0d1","input":"No = 0\n\nYes = 1\n\nA majority of patients did not experience exercise angina. However, in patients with heart disease, an overwhelming majority \\(85.2%\\) experienced exercise angina. In great contrast, about two thirds of patients without heart disease did not experience exercise angina and around a third did. Heart disease could be a factor that contributes to exercise angina, but exercise angina is not necessarily an indicator of heart disease considering a considerable amount of patients without heart disease experienced it as well. \n","pos":28,"type":"cell"}
{"cell_type":"markdown","id":"237703","input":"The histogram above shows the ages of the participants of the data set.  The youngest participants were twenty\\-eight to twenty\\-nine years old, while the oldest participants were seventy\\-six to seventy\\-seven years old. We can see that the greatest amount of participants was in the age group of fifty\\-four to fifty\\-five year olds, with a total of 92 participants. \n\n","pos":38,"type":"cell"}
{"cell_type":"markdown","id":"27c11b","input":"Interestingly, it seems like cholesterol levels are very similar in all groups. While the values in the male group with heart disease have a larger range than its sibling, the female group's graphs are the opposite. Additionally, the distributions overlap almost entirely, with the heart disease group only being slightly higher in cholesterol levels than the no heart disease group.\n\n","pos":55,"type":"cell"}
{"cell_type":"markdown","id":"2fb0a7","input":"#Age is age\n\n#Sex   \nis gender \\[F = 0, M = 1\\]\n\n#ChestPainType: chest pain type [TA: Typical Angina, ATA: Atypical Angina, NAP: Non-Anginal Pain, ASY: Asymptomatic] (Angina is a type of chest pain caused by reduced blood flow to heart)\n\n#Resting BP is resting blood pressure  (mm hg) (Normal blood pressure is less than 120/80 mm hg)\n\n#Cholesterol is serum cholesterol (mm /dl) (Serum cholestrol is total cholestrol in body)\n\n#Fasting BS is fasting blood sugar (1 if its >120 mg/dl; otherwise its zero) <=== discrete values (Blood sugar is the amt of sugar in the blood, it is the main source of energy)\n\n#Resting ECG is a test that measures the electrical activity of the heart. Used to detect irregular heartbeats.\n\n#Max Heart Rate is Max Heart Rate Id guess (between 60 and 202)\n\n#Exercise Angina is pain in the chest that comes on with exercise, stress, or other things that make the heart work harder (yes or no question)\n\n#Old peak is no idea (ST [Numeric value measured in depression] ??????) a finding on an electrocardiogram, where the trace in the ST segment is abnormally low below the baseline.\n\n#A normal ST_Slope has a slight upward concavity. Flat, downsloping, or depressed ST segments may indicate coronary ischemia.\n\n#Heart Disease is either 1 or 0 (yes or no) probably for the machine to know if its right or wrong () or to indicate that heart disease was/ was not a factor in heart failure?\n\n#http://www.imperialendo.co.uk/Newskills/ecg/ECG1.html\n\n","pos":4,"type":"cell"}
{"cell_type":"markdown","id":"36efd2","input":"This histogram above displays the total count of the sex of participants within the data set. There were 193 females and 725 males, making a total of 918 data entries. This data should be taken into consideration when considering the accuracy of the results that can be predicted with this data. The predicted results for the males will likely be more accurate because there is more data to base the predictions off of.\n\n","pos":36,"type":"cell"}
{"cell_type":"markdown","id":"4e486a","input":"This sunburst chart shows the percentage of certain groups that are a part of other groups. For example, the majority of people who have heart disease has ASY chest pain type, and people who have ASY chest pain type also tend to be older. This is contrasted by people who don't have heart disease, and it turns out that people who have ASY chest pain type are a minority in that group.\n\n- Is there anything that you find interesting? \n- \n\n","pos":68,"type":"cell"}
{"cell_type":"markdown","id":"598500","input":"I believe the graphs indicate nothing about the no heart disease group; however, it more indicates that people are more likely to get heart disease as an adult than as a child, since the data peaks at around 55 years of age for males and 60 for females.\n","pos":57,"type":"cell"}
{"cell_type":"markdown","id":"677654","input":"To do: \n\n- First check for null values\n- Check if you need to drop any columns\n- Convert columns that are strings to values\n- Find which columns are continuous and which are categorical\n\nVisualizations/Charts to make:\n\n- Pie charts \\(Emma\\)\n- Scatterplots \\(Scatter plot matrix?\\) \\(Thomas\\)\n  - Continuous values only please\n- Boxplots OR Vase plots \\(Jeffrey and Kenju\\)\n- Histograms of continous values and categorical \\(try to separate it by sex\\) \\(Halli\\)\n- CORRELATION MATRIX :open_mouth: \\(Try to look up what that is first\\) \\(Rhone\\)\n- Sunburst\\(Thomas\\)\n- Contour Maps as well \n\n","pos":49,"type":"cell"}
{"cell_type":"markdown","id":"6c6fd5","input":"A correlation I found was that people who have heart disease have more abnormal cholesterol and higher age. For people with heart disease, the  outliers were slightly extreme in the cholesterol boxplot, and overall larger in the age boxplot.  Additionally, the heartrate boxplot indicated that heartrate is overall faster in people without heart disease. These boxplots indicate that heart disease is somewhat correlated with Age, Maximum heart rate, and Cholesterol.\n\n","pos":16,"type":"cell"}
{"cell_type":"markdown","id":"707de2","input":"The graph of the cholesterol level of people with and without heart disease are very similar.  The data for cholesterol levels was measured in millimoles per deciliters. Some other data to consider is that there was outliers in this graph. An example of this was some participants had a cholesterol level of 0. I am not certain that  this measurement was an error so I decided to not include that data point in the range of this graph. For people with and without heart failure, both of the graphs peaked at around the same level with people who had heart disease at a cholesterol level of 200\\-219 mm/dL., and those without peaking at 220\\-239 mm/dL..\n\nThe graph of the resting blood pressure of people with and without heart disease was also very similar. Between each range, for both people with and without heart disease, the count of the participants that had a certain level at which their resting blood pressure increased and decreased between ranges. Every five, the count would increase, and then the next five, it would decrease.\n\nBased on these two graphs, I would conclude that Cholesterol Level and Resting Blood Pressure do not play a great factor in predicting whether a person has heart failure, as the graphs of people with and without heart failure for both categories are too similar.\n","pos":44,"type":"cell"}
{"cell_type":"markdown","id":"b2d919","input":"For Max Heart Rate, it seems like there may be a correlation between higher heart rate in individuals with heart disease and individuals with no heart disease. However, looking at the female group especially, it appears that the difference may be insignificant due to the large overlap at the peaks of the graphs.\n\n","pos":53,"type":"cell"}
{"cell_type":"markdown","id":"db1ede","input":"This correlation matrix is comparing all columns in the table to see how correlated they are in other. This meaning, that a strong correlation means that there is a significant trend found in relation to another, and then scaling down until you get to neglibible in which they barely affect each other to no correlation where they have no affect at all on each other. Overall for most of the values there was either practically no correlation, a neglegible correlation, or a weak correlation. The highest instances would be described as a moderate correlation\\(if you take the definition of a moderate correlation to be between 0.5 and 0.7\\).These instances came in the relationship between ST\\_Slope and old peak with a correlation of 0.502, and a moderate correlation between heart disease and ST\\_Slope of 0.599.  ST\\_Slope is measured during a heart test and is supposed to go up when one does exercise. Therefore, an abnormal slope would be either staying flat or trending downward which could be a sign of heart disease. There are then a number of high low correlations coming to either 0.4 up to 0.494. The overall trend was that the bulk of the columns were correlated to each other between the correlation number of the absolute value 0.09 to the absolute value 0.35. There was a wide spread of values being both positive, meaning when one increases, the other can increase, and negative, which means when one value increases the other decreases. There were also some factors with an especially low correlation towards everything, namely RestingECG which had a highest value resulting in a weak correlation of 0.213 but often below 0.1.\n\n","pos":30,"type":"cell"}
{"cell_type":"markdown","id":"dd961e","input":"Maximum Heart Rate could be a factor that could greatly influence whether someone has heart disease or not. The graph of people without heart failure is skewed to having a higher maximum heart rate than the graph of people with heart failure which is skewed to the lower end. Both graphs are placed on the same scale so that the counts of the graphs can be compared. While the counts of people who did Not have heart failure are lower than the counts of people who did HAVE heart failure, the graphs give a clear indication people who do not have heart failure have a higher maximum heart rate. \n\n","pos":46,"type":"cell"}
{"cell_type":"markdown","id":"e5e9a0","input":"The turning point within the dataset is ages forty\\-six to forty\\-seven. When you compare the data of the ages of those younger than forty\\-six to forty\\-seven, more people do NOT have heart failure. Whereas after ages forty\\-six to forty\\-seven, more people had heart failure than people who did not. The peak of the count of people who had heart failure was centered at around ages fifty\\-four to sixty\\-three with age ranges of fifty\\-six to fifty\\-seven and ages fifty\\-eight to fifty\\-nine both having the greatest count of 51 participants having heart failure.  The distribution of the graph of people without heart failure is distributed differently. The highest count of people who did NOT have heart failure was 45 participants ages fifty\\-four to fifty\\-five.  The graph of people without heart failure is less smooth, with a greater change between age ranges.\n","pos":42,"type":"cell"}
{"cell_type":"markdown","id":"ec65ce","input":"`Analysis: This is a scatter matrix which shows a scatter plot comparing all the continuous inputs in the data frame. I think this matrix shows that although heart disease is complicated and nothing is exactly one to one, there are general trends with certain traits that increase risks. For example, in the Age and MaxHR scatter plot, we see that people with heart disease generally trend towards being older and having a lower MaxHR. We can also see that people with a high Oldpeak tend to have heart disease. Some variables also have limited relationships with others. For example, we can see that broadly speaking, the higher the age the higher the resting RestingBP`\n\n","pos":32,"type":"cell"}
{"cell_type":"markdown","id":"ed60dc","input":"Again, this first graph illustrates the Sex of participants with and without heart failure. Like the histogram of just the distribution of the sex without relation to heart failure, there are more males than females in the study. However, what the previous histogram didn't reveal was that in this data set, more males had heart disease than did not which compared to females had more females without heart disease than who did.\n\nThe final histogram reveals that a normal Old Peak should be 0. 253 participants without heart failure had an Old Peak of 0\\- 0.1 while 129 participants with heart failure had the same Old Peak. This data reveals that while Old Peak should be considered when determining heart failure, it is also due to other factors. If Old Peak were a factor that determined heart failure, less people with heart failure would have an Old Peak measurement of 0\\-0.1.\n","pos":48,"type":"cell"}
{"id":0,"time":1658773868191,"type":"user"}
{"last_load":1658779830718,"type":"file"}