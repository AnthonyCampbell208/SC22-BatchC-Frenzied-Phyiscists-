{"backend_state":"init","connection_file":"/projects/d5a3aa23-997d-4ffc-977a-1dc20c583e62/.local/share/jupyter/runtime/kernel-7d3720f6-cb6a-4fba-9029-38e90a907db7.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"1864fe","input":"\nfig2 = create2Fig(heart_df2['Sex'][heart_df2['HeartDisease'] == 0],\n                  heart_df2['Cholesterol'][heart_df2['HeartDisease'] == 0], 'No HD',\n                  heart_df2['Sex'][heart_df2['HeartDisease'] == 1],\n                  heart_df2['Cholesterol'][heart_df2['HeartDisease'] == 1], 'Has HD',\n                  'Sex', 'Cholesterol')\nfig2.show()","pos":43,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"4e486a","input":"","pos":50,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"bbb5d2","input":"fig3 = create2Fig(heart_df2['Sex'][heart_df2['HeartDisease'] == 0],\n                  heart_df2['Age'][heart_df2['HeartDisease'] == 0], 'No HD',\n                  heart_df2['Sex'][heart_df2['HeartDisease'] == 1],\n                  heart_df2['Age'][heart_df2['HeartDisease'] == 1], 'Has HD',\n                  'Sex', 'Age')\nfig3.show()","pos":44,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"c7c2f8","input":"","pos":5,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"ed60dc","input":"","pos":38,"type":"cell"}
{"cell_type":"code","exec_count":118,"id":"e4ed6b","input":"sunburst_df = heart_df.copy(deep=True)\nsunburst_df['ChestPainType'].replace(0, 'ATA' ,inplace=True)\nsunburst_df['ChestPainType'].replace(1,'NAP' ,inplace=True)\nsunburst_df['ChestPainType'].replace(2,'ASY' ,inplace=True)\nsunburst_df['ChestPainType'].replace(3,'TA' ,inplace=True)\nsunburst_df['HeartDisease'].replace(1,'Has Heart Disease' ,inplace=True)\nsunburst_df['HeartDisease'].replace(0,'No Heart Disease' ,inplace=True)\nfig = px.sunburst(sunburst_df, path=['HeartDisease', 'ChestPainType', 'Age'])\nfig.update_layout(\n    title='Sunburst',\n    width=1000,\n    height=1000,\n)\nfig.show()","output":{"0":{"name":"stderr","output_type":"stream","text":"/projects/d5a3aa23-997d-4ffc-977a-1dc20c583e62/miniconda3/envs/ds_env/lib/python3.8/site-packages/plotly/express/_core.py:1637: FutureWarning:\n\nThe frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n\n/projects/d5a3aa23-997d-4ffc-977a-1dc20c583e62/miniconda3/envs/ds_env/lib/python3.8/site-packages/plotly/express/_core.py:1637: FutureWarning:\n\nThe frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n\n/projects/d5a3aa23-997d-4ffc-977a-1dc20c583e62/miniconda3/envs/ds_env/lib/python3.8/site-packages/plotly/express/_core.py:1637: FutureWarning:\n\nThe frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n\n"},"1":{"data":{"iframe":"617c18514070ff2928c7444dd90fa85ef7629310"},"exec_count":118,"output_type":"execute_result"}},"pos":49,"type":"cell"}
{"cell_type":"code","exec_count":132,"id":"f0f65f","input":"#px.violin(heart_df, x=\"HeartDisease\", y=\"MaxHR\", points=\"all\", color=\"Sex\").show()","pos":40,"type":"cell"}
{"cell_type":"code","exec_count":141,"id":"c9c559","input":"px.bar([1,2,3], [3,4,5])","output":{"0":{"data":{"iframe":"31f0d5602858dbc7f77c8e438b5aa070215ad1d3"},"exec_count":141,"output_type":"execute_result"}},"pos":45,"type":"cell"}
{"cell_type":"code","exec_count":15,"id":"2b99e5","input":"heart_df.columns","output":{"0":{"data":{"text/plain":"Index(['Age', 'Sex', 'ChestPainType', 'RestingBP', 'Cholesterol', 'FastingBS',\n       'RestingECG', 'MaxHR', 'ExerciseAngina', 'Oldpeak', 'ST_Slope',\n       'HeartDisease'],\n      dtype='object')"},"exec_count":15,"output_type":"execute_result"}},"pos":2,"type":"cell"}
{"cell_type":"code","exec_count":150,"id":"24e716","input":"heart_df.ChestPainType.value_counts()","output":{"0":{"data":{"text/plain":"2    496\n1    203\n0    173\n3     46\nName: ChestPainType, dtype: int64"},"exec_count":150,"output_type":"execute_result"}},"pos":17,"type":"cell"}
{"cell_type":"code","exec_count":155,"id":"61bc2e","input":"import plotly.graph_objects as go\n\n\n#Heart disease[yes = 1, no = 0]\n#Cholesterol levels =green\n#RestingBP = red\n#MaxHR =orange\n\n#Shows that people who have abnormally high or low cholesterol have heart disease\n\n#Cholesterol\nfig = go.Figure()\nfig.add_trace(go.Box(\n    x=heart_df['Cholesterol'],\n    y=heart_df['HeartDisease'],\n    name='Cholesterol',\n    marker_color='#3D9970'\n))\n\n\nfig.update_layout(\n    xaxis=dict(title='Cholesterol', zeroline=False),\n    yaxis = dict(title='HeartDisease', zeroline=False),\n    boxmode='group'\n)\n\nfig.update_traces(orientation='h') # horizontal box plots\nfig.show()\n\n\n\n\n\n# angina = go.Figure()\n\n# angina.add_trace(go.Box(\n#     x=heart_df['ExerciseAngina'],\n#     y=heart_df['HeartDisease'],\n#     name='ExerciseAngina',\n#     marker_color='#FF851B'\n# ))\n\n\n# angina.update_layout(\n#     xaxis=dict(title='ExerciseAngina', zeroline=False),\n#     yaxis = dict(title='HeartDisease', zeroline=False),\n#     boxmode='group'\n# )\n\n# angina.update_traces(orientation='h') # horizontal box plots\n# angina.show()\n\n#a = px.box(df, y=\"total_bill\")\n#a.show()\n\n#fig = px.box(heart_df, x= 'HeartDisease',y='Age' )\n#fig.show()\n#e = px.box(heart_df, x= 'Age',y='Cholesterol', color = 'HeartDisease' )\n#e.show()\n","output":{"0":{"data":{"iframe":"b2cef9cb552f7ed1dd5129d60cdd856305ceda4a"},"exec_count":155,"output_type":"execute_result"}},"pos":11,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":168,"id":"1dcf60","input":"hd_true = heart_df[heart_df['HeartDisease'] == 1]\nhd_false = heart_df[heart_df['HeartDisease'] == 0]","pos":29,"type":"cell"}
{"cell_type":"code","exec_count":171,"id":"eabacd","input":"heart_df2 = heart_df[heart_df['Cholesterol'] > 0]\nheart_df2['Sex'].replace(0,'Female',inplace=True)\nheart_df2['Sex'].replace(1,'Male',inplace=True)\nprint(heart_df2.shape)\n\nimport plotly.graph_objects as go\n\n#plot male half, female half\n#x is heart disease\n#y is heart rate\n\n\ndef create2Fig(x_data1, y_data1, legend_title1, x_data2, y_data2,\n               legend_title2, x_title, y_title):\n    fig = go.Figure()\n    fig.add_trace(\n        go.Violin(x=x_data1,\n                  y=y_data1,\n                  legendgroup=legend_title1,\n                  scalegroup=legend_title1,\n                  name=legend_title1,\n                  side='negative',\n                  line_color='blue',\n                  width=0.5))\n    fig.add_trace(\n        go.Violin(x=x_data2,\n                  y=y_data2,\n                  legendgroup=legend_title2,\n                  scalegroup=legend_title2,\n                  name=legend_title2,\n                  side='positive',\n                  line_color='orange',\n                  width=0.5))\n    fig.update_traces(meanline_visible=True)\n    fig.update_layout(violingap=0, violinmode='overlay')\n    fig.update_xaxes(title_text=x_title)\n    fig.update_yaxes(title_text=y_title)\n    return fig\n\n\n# fig = create2Fig(heart_df2['HeartDisease'][heart_df2['Sex'] == 1],\n#                  heart_df2['MaxHR'][heart_df2['Sex'] == 1], 'Male',\n#                  heart_df2['HeartDisease'][heart_df2['Sex'] == 0],\n#                  heart_df2['MaxHR'][heart_df2['Sex'] == 0], 'Female',\n#                  'Heart Disease', 'Max Heart Rate')\n\n# fig2.add_trace(go.Violin(x=heart_df2['HeartDisease'][ heart_df2['Sex'] == 1 ],\n#                         y=heart_df2['Cholesterol'][ heart_df2['Sex'] == 1 ],\n#                         legendgroup='Male', scalegroup='Male', name='Male',\n#                         side='negative',\n#                         line_color='blue',\n#                         width = 0.5)\n#              )\n# fig2.add_trace(go.Violin(x=heart_df2['HeartDisease'][heart_df2['Sex'] == 0 ],\n#                         y=heart_df2['Cholesterol'][ heart_df2['Sex'] == 0 ],\n#                         legendgroup='Female', scalegroup='Female', name='Female',\n#                         side='positive',\n#                         line_color='orange',\n#                        width = 0.5)\n#              )\n# fig2.update_traces(meanline_visible=True)\n# fig2.update_layout(violingap=0, violinmode='overlay')\n# fig2.update_xaxes(title_text='Heart Disease')\n# fig2.update_yaxes(title_text='Cholesterol (mm/dl)')\n# fig.show()\n# fig2.show()\n\n#As expected, age and cholesterol levels seem to be directly proportional to the possibility of getting heart disease, with lower cholesterol levels appearing in #those without heart disease, and lower age appearing in those without heart disease. Additionally, people without heart disease seem to have a higher maximum #heart rate compared to those with.","output":{"0":{"name":"stdout","output_type":"stream","text":"(746, 12)\n"},"1":{"name":"stderr","output_type":"stream","text":"/tmp/ipykernel_841/3235282450.py:2: SettingWithCopyWarning:\n\n\nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n\n/tmp/ipykernel_841/3235282450.py:3: SettingWithCopyWarning:\n\n\nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n\n"}},"pos":41,"type":"cell"}
{"cell_type":"code","exec_count":172,"id":"97401d","input":"\n#Chest Pain Type Overall & Chest Pain With/Without Heart Disease\nlabels = [\"Typical Angina\", \"Atypical Angina\" , \"Non-Anginal Pain\", \"Asymptomatic\"]\nfig = px.pie(heart_df, names='ChestPainType', title = \"Overall Chest Pain Type Prevalence\", color_discrete_sequence=px.colors.sequential.RdBu)\nfig.show()\n#Wait this is really close to what you're actually supposed to do so you keep making the pie charts :))) You got this emma\nfig = make_subplots(rows=1, cols=2, specs=[[{'type':'pie'}, {'type':'pie'}]])\nfig.add_trace(go.Pie(labels = with_heart_disease['ChestPainType'], name = \"With Heart Disease\"), 1,1)\nfig.add_trace(go.Pie(labels = no_heart_disease['ChestPainType'], name = \"No Heart Disease\"), 1,2)\n\nfig.update_traces(hole=.4, hoverinfo=\"label+percent+name\")\nfig.update_layout(title_text = \"Chest Pain Type and Heart Disease\", annotations=[dict(text='Heart Disease', x=0.19, y=0.5, font_size=15, showarrow=False),\n                 dict(text='No Heart Disease', x=0.817, y=0.5, font_size=15, showarrow=False)])\nfig.show()\n\n\n\n#Exercise Angina & Exercise Angina With/Without Heart Disease\nfig = px.pie(heart_df, names='ExerciseAngina', title = \"Exercise Angina\")\nfig.show()\n\nfig = make_subplots(rows=1, cols=2, specs=[[{'type':'pie'}, {'type':'pie'}]])\nfig.add_trace(go.Pie(labels = no_exercise_angina['HeartDisease'], name = \"No Heart Disease\"), 1,1)\nfig.add_trace(go.Pie(labels = exercise_angina['HeartDisease'], name = \"Heart Disease\"), 1,2)\n\nfig.update_traces(hole=.4, hoverinfo=\"label+percent+name\")\nfig.update_layout(title_text = \"Exercise Angina and Heart Disease\", annotations=[dict(text='No Heart Disease', x=0.184, y=0.5, font_size=15, showarrow=False),\n                 dict(text='Heart Disease', x=0.808, y=0.5, font_size=15, showarrow=False)])\nfig.show()\n\n","output":{"0":{"data":{"iframe":"83272cf65ff29ae0e2f905ed0251792e118d682a"},"exec_count":172,"output_type":"execute_result"},"1":{"data":{"iframe":"d71bc36cf2c0a19e56901d45a25157cd2f4718db"},"exec_count":172,"output_type":"execute_result"},"2":{"data":{"iframe":"13b265d01918c2fc27b32e776f173ef40ab71280"},"exec_count":172,"output_type":"execute_result"},"3":{"data":{"iframe":"84920f53c89904350a12e15a60dbbd43a2239281"},"exec_count":172,"output_type":"execute_result"}},"pos":23,"type":"cell"}
{"cell_type":"code","exec_count":173,"id":"a686a9","input":"#Age\na = go.Figure()\n\na.add_trace(go.Box(\n    x=heart_df['Age'],\n    y=heart_df['HeartDisease'],\n    name='Age',\n    marker_color='#FF4136'\n))\na.update_layout(\n    xaxis=dict(title='Age', zeroline=False),\n    yaxis = dict(title='HeartDisease', zeroline=False),\n    boxmode='group'\n)\n\na.update_traces(orientation='h') # horizontal box plots\na.show()","output":{"0":{"data":{"iframe":"4679ad0da8c840f78eac565d796c57c785c88ff8"},"exec_count":173,"output_type":"execute_result"}},"pos":15,"type":"cell"}
{"cell_type":"code","exec_count":177,"id":"d5e4e2","input":"altfig = create2Fig(heart_df2['Sex'][heart_df2['HeartDisease'] == 0],\n                 heart_df2['MaxHR'][heart_df2['HeartDisease'] == 0], 'No HD',\n                 heart_df2['Sex'][heart_df2['HeartDisease'] == 1],\n                 heart_df2['MaxHR'][heart_df2['HeartDisease'] == 1], 'Has HD',\n                 'Sex', 'Max Heart Rate')\naltfig.show()\n","output":{"0":{"data":{"iframe":"9ed8db54354439d2d3f3e626aab234abd452fc2f"},"exec_count":177,"output_type":"execute_result"}},"pos":42,"type":"cell"}
{"cell_type":"code","exec_count":187,"id":"99fa17","input":"# Makes the Layout for the Histogram\nfig = make_subplots(rows = 1, cols = 2, subplot_titles = (\"Ages of People With Heart Failure\", \"Ages of People Without Heart Failure\"))\n\n#Heart Failure and Age\nfig.add_trace(go.Histogram(x = hd_true['Age'], name = 'Has Heart Failure'), row = 1, col = 1)\nfig.add_trace(go.Histogram(x = hd_false['Age'], name = 'No Heart Failure'), row = 1, col = 2)\n\n#Updates titles and increments of the count for Age\nfig.update_xaxes(title_text = \"Age\", row = 1, col = 1)\nfig.update_yaxes(title_text = \"Count\", row = 1, col = 1)\nfig.update_xaxes(title_text = \"Age\", row = 1, col = 2)\nfig.update_yaxes(title_text = \"Count\", row = 1, col = 2)\n\nfig.update_layout(height = 800, width = 1500, title_text = \"Histograms Comparing Different Values of People With and Without Heart Failure\")\nfig.show()\nprint(\"Analysis: xxxxxx\")","output":{"0":{"data":{"iframe":"83130d6e497b41b6f9827427a9205d475a788c40"},"exec_count":187,"output_type":"execute_result"},"1":{"name":"stdout","output_type":"stream","text":"Analysis: xxxxxx\n"}},"pos":34,"type":"cell"}
{"cell_type":"code","exec_count":200,"id":"0180e2","input":"#Test\n#hd_true = heart_df[heart_df['HeartDisease'] ==\n#hd_false = heart_df[heart_df['HeartDisease'] == 0]\n#hd_false.head()","pos":33,"type":"cell"}
{"cell_type":"code","exec_count":202,"id":"4afcc2","input":"fig3 = make_subplots (rows = 1, cols = 2, subplot_titles = (\"Maximum Heart Rate of People With Heart Failure\", \"Maximum Heart Rate of People Without Heart Failure\"))\n\n#Heart Failure and Max Heart rate\nfig3.add_trace(go.Histogram(x = hd_true['MaxHR'], name = 'Has Heart Failure'), row = 1, col = 1)\nfig3.add_trace(go.Histogram(x = hd_false['MaxHR'], name = 'No Heart Failure'), row = 1, col = 2)\n\n\n#update titles and increments of the count for max heart rates\nfig3.update_xaxes(title_text = \"Maximum Heart Rate\", range = [50, 210], row = 1, col = 1)\nfig3.update_yaxes(title_text = \"Count\", range = [0, 60], row = 1, col = 1)\nfig3.update_xaxes(title_text = \"Maximum Heart Rate\", range = [50, 210], row = 1, col = 2)\nfig3.update_yaxes(title_text = \"Count\", range = [0, 60], row = 1, col = 2)\n\nfig3.update_layout(height = 500, width = 1500, title_text = \"Histograms Comparing Different Values of People With and Without Heart Failure\")\nfig3.show()\nprint(\"Analysis: xxxxxxxx\")","output":{"0":{"data":{"iframe":"7ef674ab4c541ce8d12e31ffc882ae0d82f8888b"},"exec_count":202,"output_type":"execute_result"},"1":{"name":"stdout","output_type":"stream","text":"Analysis: xxxxxxxx\n"}},"pos":36,"type":"cell"}
{"cell_type":"code","exec_count":205,"id":"357481","input":"fig4 = make_subplots (rows = 1, cols = 2, subplot_titles = (\"Maximum Heart Rate of People With and Without Heart Failure\", \"Old Peak of People With and Without Heart Failure\"))\n\nfig4.add_trace(go.Histogram(x = hd_true['Sex'], name = 'Has Heart Failure'), row = 1, col = 1)\nfig4.add_trace(go.Histogram(x = hd_false['Sex'], name = 'No Heart Failure'), row = 1, col = 1)\n\nfig4.add_trace(go.Histogram(x = hd_true['Oldpeak'], name = 'Has Heart Failure'), row = 1, col = 2)\nfig4.add_trace(go.Histogram(x = hd_true['Oldpeak'], name = 'No Heart Failure'), row = 1, col = 2)\n\nfig3.update_xaxes(title_text = \"Sex: [0 is female, 1 is male]\", row = 1, col = 1)\n\nfig4.update_layout(height = 500, width = 1500, title_text = \"Histograms Comparing Different Values of People With and Without Heart Failure\")\nfig4.show()\nprint(\"Analysis: xxxxxxxx\")","output":{"0":{"data":{"iframe":"46e93c37cafa4b0a74cce8a01ea1be759662f8fa"},"exec_count":205,"output_type":"execute_result"},"1":{"name":"stdout","output_type":"stream","text":"Analysis: xxxxxxxx\n"}},"pos":37,"type":"cell"}
{"cell_type":"code","exec_count":207,"id":"7f0073","input":"fig2 = make_subplots (rows = 1, cols = 2, subplot_titles = (\"Cholesterol Levels of People With and Without Heart Failure\", \"Resting Blood Pressure of People With and Without Heart Failure\"))\n#Heart Failure and Cholesterol\nfig2.add_trace(go.Histogram(x = hd_true['Cholesterol'], name = 'Has Heart Failure'),  row = 1, col = 1)\nfig2.add_trace(go.Histogram(x = hd_false['Cholesterol'], name = 'No Heart Failure'), row= 1, col = 1)\n\n#Heart Failure and Blood Pressure\nfig2.add_trace(go.Histogram(x = hd_true['RestingBP'], name = 'Has Heart Failure'), row = 1, col = 2)\nfig2.add_trace(go.Histogram(x = hd_false['RestingBP'], name = 'No Heart Failure'), row = 1, col = 2)\n\n\n#Update titles and increments of the count for Cholesterol\nfig2.update_xaxes(title_text = \"Cholesterol Level\", range = [70, 625], row = 1, col = 1)\nfig2.update_yaxes(title_text = \"Count\", range = [0, 70], row = 1, col = 1)\n\n\n#Update titles and increments of the count for Blood Pressure\nfig2.update_xaxes(title_text = \"Resting Blood Pressure\", range = [75, 205], row = 1, col = 2)\nfig2.update_yaxes(title_text = \"Count\", row = 1, col = 2)\n\nfig2.update_layout(height = 600, width = 1500, title_text = \"Histograms Comparing Different Values of People With and Without Heart Failure\")\nfig2.show()\nprint(\"Analysis: xxxxxxx\")","output":{"0":{"data":{"iframe":"0d5fd48dbd4472d8465a98a28f8e10a997f93c46"},"exec_count":207,"output_type":"execute_result"},"1":{"name":"stdout","output_type":"stream","text":"Analysis: xxxxxxx\n"}},"pos":35,"type":"cell"}
{"cell_type":"code","exec_count":208,"id":"593cc1","input":"px.histogram(heart_df['Age'], x = 'Age', title = 'Histogram of Age')\n#px.histogram(heart_df, x = 'Age')","output":{"0":{"data":{"iframe":"67fdaf314c8f53924bad7f606e7ab08167d502aa"},"exec_count":208,"output_type":"execute_result"}},"pos":31,"type":"cell"}
{"cell_type":"code","exec_count":209,"id":"a17d25","input":"#Test\n#heart_df.HeartDisease","pos":32,"type":"cell"}
{"cell_type":"code","exec_count":210,"id":"377035","input":"#Test\n#heart_df.columns","pos":28,"type":"cell"}
{"cell_type":"code","exec_count":211,"id":"e915a6","input":"px.histogram(heart_df, x='Sex', title = \"Histogram of Sex\")\n#print(\"Analysis: xxxxxxx\")","output":{"0":{"data":{"iframe":"b08846fbd9da5921c6db23bf5540ebdabe3bfc33"},"exec_count":211,"output_type":"execute_result"}},"pos":30,"type":"cell"}
{"cell_type":"code","exec_count":213,"id":"4832f1","input":"ATA = []\n\nNAP = []\nASY = []\nTA = []\nw =heart_df.query('ChestPainType == 0')['Age']\nx =heart_df.query('ChestPainType == 1')['Age']\ny =heart_df.query('ChestPainType == 2')['Age']\nz =heart_df.query('ChestPainType == 3')['Age']\nATA.append(w)\nNAP.append(x)\nASY.append(y)\nTA.append(z)\nfor i in ATA:\n    i = int(i)\nh = sum(ATA)\nprint(h)\n\n\"\"\"heart_df['ChestPainType'].replace('ATA',0 ,inplace=True)\nheart_df['ChestPainType'].replace('NAP',1 ,inplace=True)\nheart_df['ChestPainType'].replace('ASY',2 ,inplace=True)\nheart_df['ChestPainType'].replace('TA',3 ,inplace=True)\"\"\"\n\"\"\"x = heart_df['ChestPainType']\ny = heart_df['Age']\nfig = px.bar(\"Chest Pain Type\", x, \"Age\", y)\nfig.show()\"\"\"","output":{"0":{"ename":"TypeError","evalue":"cannot convert the series to <class 'int'>","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [213]\u001b[0m, in \u001b[0;36m<cell line: 14>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     13\u001b[0m TA\u001b[38;5;241m.\u001b[39mappend(z)\n\u001b[1;32m     14\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m i \u001b[38;5;129;01min\u001b[39;00m ATA:\n\u001b[0;32m---> 15\u001b[0m     i \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mint\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mi\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     16\u001b[0m h \u001b[38;5;241m=\u001b[39m \u001b[38;5;28msum\u001b[39m(ATA)\n\u001b[1;32m     17\u001b[0m \u001b[38;5;28mprint\u001b[39m(h)\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/series.py:191\u001b[0m, in \u001b[0;36m_coerce_method.<locals>.wrapper\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    189\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mlen\u001b[39m(\u001b[38;5;28mself\u001b[39m) \u001b[38;5;241m==\u001b[39m \u001b[38;5;241m1\u001b[39m:\n\u001b[1;32m    190\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m converter(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39miloc[\u001b[38;5;241m0\u001b[39m])\n\u001b[0;32m--> 191\u001b[0m \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mcannot convert the series to \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mconverter\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m\"\u001b[39m)\n","\u001b[0;31mTypeError\u001b[0m: cannot convert the series to <class 'int'>"]}},"pos":46,"type":"cell"}
{"cell_type":"code","exec_count":218,"id":"880d3b","input":"heart_df.HeartDisease.value_counts()","output":{"0":{"data":{"text/plain":"1    508\n0    410\nName: HeartDisease, dtype: int64"},"exec_count":218,"output_type":"execute_result"}},"pos":18,"type":"cell"}
{"cell_type":"code","exec_count":258,"id":"f5558f","input":"cholesterol_df = heart_df.loc[heart_df['Cholesterol'] > 0]\n# px.scatter(cholesterol_df, x = \"RestingBP\", y = \"MaxHR\", color = \"Age\")\n# px.scatter(cholesterol_df, x = \"Cholesterol\", y = \"MaxHR\", color = \"Age\")\ncholesterol_df[\"HeartDisease\"] = cholesterol_df[\"HeartDisease\"].astype(str)\nmatrix = px.scatter_matrix(cholesterol_df,\n    dimensions=[\"Age\", \"RestingBP\", \"Cholesterol\", \"MaxHR\", \"Oldpeak\"],\n    color=\"HeartDisease\",  color_discrete_sequence=[\"red\", \"blue\", \"green\", \"goldenrod\", \"magenta\"])\nmatrix.update_traces(diagonal_visible=False, showupperhalf=False)\nmatrix.update_layout(\n    title='Scatter Matrix',\n    width=1000,\n    height=1000,\n)\nmatrix.show()","output":{"0":{"name":"stderr","output_type":"stream","text":"/tmp/ipykernel_665/2339356345.py:4: SettingWithCopyWarning:\n\n\nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n\n"},"1":{"data":{"iframe":"d5462c83e90f0796bc4fe3fb140aaa6bdd688e7a"},"exec_count":258,"output_type":"execute_result"}},"pos":26,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":28,"id":"e91e83","input":"heart_df = pd.read_csv(\"data/heart.csv\")\nheart_df.head()\n","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Sex</th>\n      <th>ChestPainType</th>\n      <th>RestingBP</th>\n      <th>Cholesterol</th>\n      <th>FastingBS</th>\n      <th>RestingECG</th>\n      <th>MaxHR</th>\n      <th>ExerciseAngina</th>\n      <th>Oldpeak</th>\n      <th>ST_Slope</th>\n      <th>HeartDisease</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>40</td>\n      <td>M</td>\n      <td>ATA</td>\n      <td>140</td>\n      <td>289</td>\n      <td>0</td>\n      <td>Normal</td>\n      <td>172</td>\n      <td>N</td>\n      <td>0.0</td>\n      <td>Up</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>49</td>\n      <td>F</td>\n      <td>NAP</td>\n      <td>160</td>\n      <td>180</td>\n      <td>0</td>\n      <td>Normal</td>\n      <td>156</td>\n      <td>N</td>\n      <td>1.0</td>\n      <td>Flat</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>37</td>\n      <td>M</td>\n      <td>ATA</td>\n      <td>130</td>\n      <td>283</td>\n      <td>0</td>\n      <td>ST</td>\n      <td>98</td>\n      <td>N</td>\n      <td>0.0</td>\n      <td>Up</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>48</td>\n      <td>F</td>\n      <td>ASY</td>\n      <td>138</td>\n      <td>214</td>\n      <td>0</td>\n      <td>Normal</td>\n      <td>108</td>\n      <td>Y</td>\n      <td>1.5</td>\n      <td>Flat</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>54</td>\n      <td>M</td>\n      <td>NAP</td>\n      <td>150</td>\n      <td>195</td>\n      <td>0</td>\n      <td>Normal</td>\n      <td>122</td>\n      <td>N</td>\n      <td>0.0</td>\n      <td>Up</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   Age Sex ChestPainType  RestingBP  Cholesterol  FastingBS RestingECG  MaxHR  \\\n0   40   M           ATA        140          289          0     Normal    172   \n1   49   F           NAP        160          180          0     Normal    156   \n2   37   M           ATA        130          283          0         ST     98   \n3   48   F           ASY        138          214          0     Normal    108   \n4   54   M           NAP        150          195          0     Normal    122   \n\n  ExerciseAngina  Oldpeak ST_Slope  HeartDisease  \n0              N      0.0       Up             0  \n1              N      1.0     Flat             1  \n2              N      0.0       Up             0  \n3              Y      1.5     Flat             1  \n4              N      0.0       Up             0  "},"exec_count":28,"output_type":"execute_result"}},"pos":1,"type":"cell"}
{"cell_type":"code","exec_count":30,"id":"e1af8a","input":"#heart_df['female'] = heart_df['female'].map({'F': 1, 'M': 0})\nheart_df['Sex'].replace('F',0 ,inplace=True)\nheart_df['Sex'].replace('M', 1,inplace=True)\n#Female is 0\n#Male is 1\n\n#ATA is 0\n#NAP is 1\n#ASY is 2\n#TA is 3\nheart_df['ChestPainType'].replace('ATA',0 ,inplace=True)\nheart_df['ChestPainType'].replace('NAP',1 ,inplace=True)\nheart_df['ChestPainType'].replace('ASY',2 ,inplace=True)\nheart_df['ChestPainType'].replace('TA',3 ,inplace=True)\n\n#Normal is 0\n#St is 1\n#LVH is 2\nheart_df['RestingECG'].replace('Normal',0, inplace=True)\nheart_df['RestingECG'].replace('ST',1, inplace=True)\nheart_df['RestingECG'].replace('LVH',2, inplace=True)\n\n#No is 0\n#Yes is 1\nheart_df['ExerciseAngina'].replace('N',0 ,inplace=True)\nheart_df['ExerciseAngina'].replace('Y',1 ,inplace=True)\n\n#ST_Slope\n#Up is 0\n#Flat is 1\n#Down is 2\nheart_df['ST_Slope'].replace('Up', 0, inplace = True)\nheart_df['ST_Slope'].replace('Flat', 1, inplace = True)\nheart_df['ST_Slope'].replace('Down', 2, inplace = True)\n\n#My computer just crashed, sorry!\n#np. Anthony is explaining scatter plots right now.\n\nheart_df.head() #worky :)","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Sex</th>\n      <th>ChestPainType</th>\n      <th>RestingBP</th>\n      <th>Cholesterol</th>\n      <th>FastingBS</th>\n      <th>RestingECG</th>\n      <th>MaxHR</th>\n      <th>ExerciseAngina</th>\n      <th>Oldpeak</th>\n      <th>ST_Slope</th>\n      <th>HeartDisease</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>40</td>\n      <td>1</td>\n      <td>0</td>\n      <td>140</td>\n      <td>289</td>\n      <td>0</td>\n      <td>0</td>\n      <td>172</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>49</td>\n      <td>0</td>\n      <td>1</td>\n      <td>160</td>\n      <td>180</td>\n      <td>0</td>\n      <td>0</td>\n      <td>156</td>\n      <td>0</td>\n      <td>1.0</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>37</td>\n      <td>1</td>\n      <td>0</td>\n      <td>130</td>\n      <td>283</td>\n      <td>0</td>\n      <td>1</td>\n      <td>98</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>48</td>\n      <td>0</td>\n      <td>2</td>\n      <td>138</td>\n      <td>214</td>\n      <td>0</td>\n      <td>0</td>\n      <td>108</td>\n      <td>1</td>\n      <td>1.5</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>54</td>\n      <td>1</td>\n      <td>1</td>\n      <td>150</td>\n      <td>195</td>\n      <td>0</td>\n      <td>0</td>\n      <td>122</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   Age  Sex  ChestPainType  RestingBP  Cholesterol  FastingBS  RestingECG  \\\n0   40    1              0        140          289          0           0   \n1   49    0              1        160          180          0           0   \n2   37    1              0        130          283          0           1   \n3   48    0              2        138          214          0           0   \n4   54    1              1        150          195          0           0   \n\n   MaxHR  ExerciseAngina  Oldpeak  ST_Slope  HeartDisease  \n0    172               0      0.0         0             0  \n1    156               0      1.0         1             1  \n2     98               0      0.0         0             0  \n3    108               1      1.5         1             1  \n4    122               0      0.0         0             0  "},"exec_count":30,"output_type":"execute_result"}},"pos":7,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":317,"id":"a562fd","input":"visual = heart_df.corr()\nvisual = round(visual,3)\nfig = px.imshow(visual, text_auto = True, title=\"Correlation Matrix\")\nfig.update_layout(\n    title=\"Heart Disease Correlation Matrix\",\n    coloraxis_colorbar=dict(\n        title=\"Correlation Spectrum\",),\n    width = 835, height = 835,\n    autosize = False,\n    font_size = 15)\nfig.show()\n\n#Anaylsis: \n","output":{"0":{"data":{"iframe":"4d302c35501af591398dbd394d2d8d06024984ce"},"exec_count":317,"output_type":"execute_result"}},"pos":24,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":32,"id":"309880","input":"with_heart_disease = heart_df[heart_df['HeartDisease']==1]\nwith_heart_disease\nwith_heart_disease['ChestPainType']","output":{"0":{"data":{"text/plain":"1      1\n3      2\n8      2\n11     0\n13     2\n      ..\n912    2\n913    3\n914    2\n915    2\n916    0\nName: ChestPainType, Length: 508, dtype: int64"},"exec_count":32,"output_type":"execute_result"}},"pos":19,"type":"cell"}
{"cell_type":"code","exec_count":323,"id":"9aa93a","input":"heart_df.head(20)","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Sex</th>\n      <th>ChestPainType</th>\n      <th>RestingBP</th>\n      <th>Cholesterol</th>\n      <th>FastingBS</th>\n      <th>RestingECG</th>\n      <th>MaxHR</th>\n      <th>ExerciseAngina</th>\n      <th>Oldpeak</th>\n      <th>ST_Slope</th>\n      <th>HeartDisease</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>40</td>\n      <td>1</td>\n      <td>0</td>\n      <td>140</td>\n      <td>289</td>\n      <td>0</td>\n      <td>0</td>\n      <td>172</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>49</td>\n      <td>0</td>\n      <td>1</td>\n      <td>160</td>\n      <td>180</td>\n      <td>0</td>\n      <td>0</td>\n      <td>156</td>\n      <td>0</td>\n      <td>1.0</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>37</td>\n      <td>1</td>\n      <td>0</td>\n      <td>130</td>\n      <td>283</td>\n      <td>0</td>\n      <td>1</td>\n      <td>98</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>48</td>\n      <td>0</td>\n      <td>2</td>\n      <td>138</td>\n      <td>214</td>\n      <td>0</td>\n      <td>0</td>\n      <td>108</td>\n      <td>1</td>\n      <td>1.5</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>54</td>\n      <td>1</td>\n      <td>1</td>\n      <td>150</td>\n      <td>195</td>\n      <td>0</td>\n      <td>0</td>\n      <td>122</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>39</td>\n      <td>1</td>\n      <td>1</td>\n      <td>120</td>\n      <td>339</td>\n      <td>0</td>\n      <td>0</td>\n      <td>170</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>45</td>\n      <td>0</td>\n      <td>0</td>\n      <td>130</td>\n      <td>237</td>\n      <td>0</td>\n      <td>0</td>\n      <td>170</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>54</td>\n      <td>1</td>\n      <td>0</td>\n      <td>110</td>\n      <td>208</td>\n      <td>0</td>\n      <td>0</td>\n      <td>142</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>37</td>\n      <td>1</td>\n      <td>2</td>\n      <td>140</td>\n      <td>207</td>\n      <td>0</td>\n      <td>0</td>\n      <td>130</td>\n      <td>1</td>\n      <td>1.5</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>48</td>\n      <td>0</td>\n      <td>0</td>\n      <td>120</td>\n      <td>284</td>\n      <td>0</td>\n      <td>0</td>\n      <td>120</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>37</td>\n      <td>0</td>\n      <td>1</td>\n      <td>130</td>\n      <td>211</td>\n      <td>0</td>\n      <td>0</td>\n      <td>142</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>58</td>\n      <td>1</td>\n      <td>0</td>\n      <td>136</td>\n      <td>164</td>\n      <td>0</td>\n      <td>1</td>\n      <td>99</td>\n      <td>1</td>\n      <td>2.0</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>39</td>\n      <td>1</td>\n      <td>0</td>\n      <td>120</td>\n      <td>204</td>\n      <td>0</td>\n      <td>0</td>\n      <td>145</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>49</td>\n      <td>1</td>\n      <td>2</td>\n      <td>140</td>\n      <td>234</td>\n      <td>0</td>\n      <td>0</td>\n      <td>140</td>\n      <td>1</td>\n      <td>1.0</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>42</td>\n      <td>0</td>\n      <td>1</td>\n      <td>115</td>\n      <td>211</td>\n      <td>0</td>\n      <td>1</td>\n      <td>137</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>54</td>\n      <td>0</td>\n      <td>0</td>\n      <td>120</td>\n      <td>273</td>\n      <td>0</td>\n      <td>0</td>\n      <td>150</td>\n      <td>0</td>\n      <td>1.5</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>38</td>\n      <td>1</td>\n      <td>2</td>\n      <td>110</td>\n      <td>196</td>\n      <td>0</td>\n      <td>0</td>\n      <td>166</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>43</td>\n      <td>0</td>\n      <td>0</td>\n      <td>120</td>\n      <td>201</td>\n      <td>0</td>\n      <td>0</td>\n      <td>165</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>60</td>\n      <td>1</td>\n      <td>2</td>\n      <td>100</td>\n      <td>248</td>\n      <td>0</td>\n      <td>0</td>\n      <td>125</td>\n      <td>0</td>\n      <td>1.0</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>36</td>\n      <td>1</td>\n      <td>0</td>\n      <td>120</td>\n      <td>267</td>\n      <td>0</td>\n      <td>0</td>\n      <td>160</td>\n      <td>0</td>\n      <td>3.0</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"    Age  Sex  ChestPainType  RestingBP  Cholesterol  FastingBS  RestingECG  \\\n0    40    1              0        140          289          0           0   \n1    49    0              1        160          180          0           0   \n2    37    1              0        130          283          0           1   \n3    48    0              2        138          214          0           0   \n4    54    1              1        150          195          0           0   \n5    39    1              1        120          339          0           0   \n6    45    0              0        130          237          0           0   \n7    54    1              0        110          208          0           0   \n8    37    1              2        140          207          0           0   \n9    48    0              0        120          284          0           0   \n10   37    0              1        130          211          0           0   \n11   58    1              0        136          164          0           1   \n12   39    1              0        120          204          0           0   \n13   49    1              2        140          234          0           0   \n14   42    0              1        115          211          0           1   \n15   54    0              0        120          273          0           0   \n16   38    1              2        110          196          0           0   \n17   43    0              0        120          201          0           0   \n18   60    1              2        100          248          0           0   \n19   36    1              0        120          267          0           0   \n\n    MaxHR  ExerciseAngina  Oldpeak  ST_Slope  HeartDisease  \n0     172               0      0.0         0             0  \n1     156               0      1.0         1             1  \n2      98               0      0.0         0             0  \n3     108               1      1.5         1             1  \n4     122               0      0.0         0             0  \n5     170               0      0.0         0             0  \n6     170               0      0.0         0             0  \n7     142               0      0.0         0             0  \n8     130               1      1.5         1             1  \n9     120               0      0.0         0             0  \n10    142               0      0.0         0             0  \n11     99               1      2.0         1             1  \n12    145               0      0.0         0             0  \n13    140               1      1.0         1             1  \n14    137               0      0.0         0             0  \n15    150               0      1.5         1             0  \n16    166               0      0.0         1             1  \n17    165               0      0.0         0             0  \n18    125               0      1.0         1             1  \n19    160               0      3.0         1             1  "},"exec_count":323,"output_type":"execute_result"}},"pos":10,"type":"cell"}
{"cell_type":"code","exec_count":33,"id":"784dc0","input":"no_heart_disease= heart_df[heart_df['HeartDisease'] == 0]\nno_heart_disease\nno_heart_disease['ChestPainType']","output":{"0":{"data":{"text/plain":"0      0\n2      0\n4      1\n5      1\n6      0\n      ..\n903    0\n904    0\n906    0\n910    0\n917    1\nName: ChestPainType, Length: 410, dtype: int64"},"exec_count":33,"output_type":"execute_result"}},"pos":20,"type":"cell"}
{"cell_type":"code","exec_count":41,"id":"313032","input":"heart_df.info()\nprint(heart_df.RestingECG.unique()) #RestingECG has 3 unique values\nprint(heart_df.ChestPainType.unique())\nprint(heart_df.ST_Slope.unique())\nprint(heart_df.ExerciseAngina.unique())\n\n\n\n\n","output":{"0":{"name":"stdout","output_type":"stream","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 918 entries, 0 to 917\nData columns (total 12 columns):\n #   Column          Non-Null Count  Dtype  \n---  ------          --------------  -----  \n 0   Age             918 non-null    int64  \n 1   Sex             918 non-null    int64  \n 2   ChestPainType   918 non-null    int64  \n 3   RestingBP       918 non-null    int64  \n 4   Cholesterol     918 non-null    int64  \n 5   FastingBS       918 non-null    int64  \n 6   RestingECG      918 non-null    int64  \n 7   MaxHR           918 non-null    int64  \n 8   ExerciseAngina  918 non-null    object \n 9   Oldpeak         918 non-null    float64\n 10  ST_Slope        918 non-null    object \n 11  HeartDisease    918 non-null    int64  \ndtypes: float64(1), int64(9), object(2)\nmemory usage: 86.2+ KB\n[1 2]\n[0 1 2 3]\n['Up' 'Flat' 'Down']\n['N' 'Y']\n"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":55,"id":"f8976e","input":"heart_df.ExerciseAngina.value_counts()\n","output":{"0":{"data":{"text/plain":"0    547\n1    371\nName: ExerciseAngina, dtype: int64"},"exec_count":55,"output_type":"execute_result"}},"pos":9,"type":"cell"}
{"cell_type":"code","exec_count":58,"id":"cf1483","input":"#Categorial: Sex, Chest Pain Type, FastingBS, Heart Disease, Resting ECG, ST_Slope, ExcerciseAngina\n\n#Continuous: [\"Age\", \"RestingBP\", \"Cholesterol\", \"MaxHR\", \"Oldpeak\"]\n","output":{"0":{"data":{"text/plain":"Index(['Age', 'Sex', 'ChestPainType', 'RestingBP', 'Cholesterol', 'FastingBS',\n       'RestingECG', 'MaxHR', 'ExerciseAngina', 'Oldpeak', 'ST_Slope',\n       'HeartDisease'],\n      dtype='object')"},"exec_count":58,"output_type":"execute_result"}},"pos":8,"type":"cell"}
{"cell_type":"code","exec_count":60,"id":"6546aa","input":"print(heart_df.shape)\nheart_df.dropna(inplace=True)\nprint(heart_df.shape)\n\n","output":{"0":{"name":"stdout","output_type":"stream","text":"(918, 12)\n(918, 12)\n"}},"pos":3,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":71,"id":"7d55ea","input":"# Please import libraries up here :)))) \n# It makes it much more readable\nimport pandas as pd\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport numpy as np\n\n","pos":0,"type":"cell"}
{"cell_type":"code","exec_count":73,"id":"6cd521","input":"np.mean(heart_df.Age)","output":{"0":{"data":{"text/plain":"53.510893246187365"},"exec_count":73,"output_type":"execute_result"}},"pos":47,"type":"cell"}
{"cell_type":"code","exec_count":75,"id":"ba394f","input":"np.std(heart_df.Age)","output":{"0":{"data":{"text/plain":"9.427477516153491"},"exec_count":75,"output_type":"execute_result"}},"pos":48,"type":"cell"}
{"cell_type":"code","exec_count":81,"id":"d75b97","input":"#RestingBP\ne = go.Figure()\n\ne.add_trace(go.Box(\n    x=heart_df['RestingBP'],\n    y=heart_df['HeartDisease'],\n    name='RestingBP',\n    marker_color='#FF4136'\n))\ne.update_layout(\n    xaxis=dict(title='RestingBP', zeroline=False),\n    yaxis = dict(title='HeartDisease', zeroline=False),\n    boxmode='group'\n)\n\ne.update_traces(orientation='h') # horizontal box plots\ne.show()","output":{"0":{"data":{"iframe":"8418ae719e1be9d4fdfe3cd62e715b0806fa325c"},"exec_count":81,"output_type":"execute_result"}},"pos":14,"type":"cell"}
{"cell_type":"code","exec_count":84,"id":"214909","input":"#MaxHR\n\nf = go.Figure()\n\nf.add_trace(go.Box(\n    x=heart_df['MaxHR'],\n    y=heart_df['HeartDisease'],\n    name='MaxHR',\n    marker_color='#FF851B'\n))\nf.update_layout(\n    xaxis=dict(title='MaxHR', zeroline=False),\n        yaxis = dict(title='HeartDisease', zeroline=False),\n    boxmode='group'\n)\n\nf.update_traces(orientation='h') # horizontal box plots\nf.show()\n","output":{"0":{"data":{"iframe":"297e672364d9f204e1fb25851224e56333f17169"},"exec_count":84,"output_type":"execute_result"}},"pos":13,"type":"cell"}
{"cell_type":"code","exec_count":97,"id":"0acf0b","input":"no_exercise_angina = heart_df[heart_df['ExerciseAngina'] == 0]\nno_exercise_angina['HeartDisease']","output":{"0":{"data":{"text/plain":"0      0\n1      1\n2      0\n4      0\n5      0\n      ..\n911    1\n913    1\n914    1\n916    1\n917    0\nName: HeartDisease, Length: 547, dtype: int64"},"exec_count":97,"output_type":"execute_result"}},"pos":21,"type":"cell"}
{"cell_type":"code","exec_count":98,"id":"a902a1","input":"exercise_angina = heart_df[heart_df['ExerciseAngina'] == 1]\nexercise_angina['HeartDisease']","output":{"0":{"data":{"text/plain":"3      1\n8      1\n11     1\n13     1\n23     1\n      ..\n907    1\n908    1\n909    1\n912    1\n915    1\nName: HeartDisease, Length: 371, dtype: int64"},"exec_count":98,"output_type":"execute_result"}},"pos":22,"type":"cell"}
{"cell_type":"markdown","id":"0586c5","input":"","pos":12,"type":"cell"}
{"cell_type":"markdown","id":"2fb0a7","input":"#Age is age\n\n#Sex   \nis gender \\[F = 0, M = 1\\]\n\n#ChestPainType: chest pain type [TA: Typical Angina, ATA: Atypical Angina, NAP: Non-Anginal Pain, ASY: Asymptomatic] (Angina is a type of chest pain caused by reduced blood flow to heart)\n\n#Resting BP is resting blood pressure  (mm hg) (Normal blood pressure is less than 120/80 mm hg)\n\n#Cholesterol is serum cholesterol (mm /dl) (Serum cholestrol is total cholestrol in body)\n\n#Fasting BS is fasting blood sugar (1 if its >120 mg/dl; otherwise its zero) <=== discrete values (Blood sugar is the amt of sugar in the blood, it is the main source of energy)\n\n#Resting ECG is a test that measures the electrical activity of the heart. Used to detect irregular heartbeats.\n\n#Max Heart Rate is Max Heart Rate Id guess (between 60 and 202)\n\n#Exercise Angina is pain in the chest that comes on with exercise, stress, or other things that make the heart work harder (yes or no question)\n\n#Old peak is no idea (ST [Numeric value measured in depression] ??????) a finding on an electrocardiogram, where the trace in the ST segment is abnormally low below the baseline.\n\n#A normal ST_Slope has a slight upward concavity. Flat, downsloping, or depressed ST segments may indicate coronary ischemia.\n\n#Heart Disease is either 1 or 0 (yes or no) probably for the machine to know if its right or wrong () or to indicate that heart disease was/ was not a factor in heart failure?\n\n#http://www.imperialendo.co.uk/Newskills/ecg/ECG1.html\n\n","pos":4,"type":"cell"}
{"cell_type":"markdown","id":"677654","input":"To do: \n\n- First check for null values\n- Check if you need to drop any columns\n- Convert columns that are strings to values\n- Find which columns are continuous and which are categorical\n\nVisualizations/Charts to make:\n\n- Pie charts \\(Emma\\)\n- Scatterplots \\(Scatter plot matrix?\\) \\(Thomas\\)\n  - Continuous values only please\n- Boxplots OR Vase plots \\(Jeffrey and Kenju\\)\n- Histograms of continous values and categorical \\(try to separate it by sex\\) \\(Halli\\)\n- CORRELATION MATRIX :open_mouth: \\(Try to look up what that is first\\) \\(Rhone\\)\n- Sunburst\n- Contour Maps as well \n\n","pos":39,"type":"cell"}
{"cell_type":"markdown","id":"6c6fd5","input":"","pos":16,"type":"cell"}
{"cell_type":"markdown","id":"db1ede","input":"This correlation matrix is comparing all columns in the table to see how correlated they are in other. This meaning, that a strong correlation means that there is a significant trend found in relation to another, and then scaling down until you get to neglibible in which they barely affect each other to no correlation where they have no affect at all on each other. Overall for most of the values there was either practically no correlation, a neglegible correlation, or a weak correlation. The highest instances would be described as a moderate correlation\\(if you take the definition of a moderate correlation to be between 0.5 and 0.7\\).These instances came in the relationship between ST\\_Slope and old peak with a correlation 0f 0.502, and a moderate correlation between heart disease and ST\\_Slope of 0.599. There are then a number of high low correlations coming to either 0.4 up to 0.494. The overall trend was that the bulk of the columns were correlated to each other between the correlation number of the absolute value 0.09 to the absolute value 0.35. There was a wide spread of values being both positive, meaning when one increases, the other can increase, and negative, which means when one value increases the other decreases.\n","pos":25,"type":"cell"}
{"cell_type":"markdown","id":"ec65ce","input":"`Analysis: This is a scatter matrix which shows a scatter plot comparing all the continuous inputs in the data frame. I think this matrix shows that although heart disease is complicated and nothing is exactly one to one, there are general trends with certain traits that increase risks. For example, in the Age and MaxHR scatter plot, we see that people with heart disease generally trend towards being older and having a lower MaxHR. We can also see that people with a high Oldpeak tend to have heart disease.`\n\n","pos":27,"type":"cell"}
{"id":0,"time":1658513170125,"type":"user"}
{"last_load":1658517553767,"type":"file"}